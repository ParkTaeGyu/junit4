Found a 112 line (269 tokens) duplication in the following files: 
Starting at line 23 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\ParameterizedTestMethodTest.java
Starting at line 22 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TestMethodTest.java

public class ParameterizedTestMethodTest {

    @SuppressWarnings("all")
    public static class EverythingWrong {
        private EverythingWrong() {
        }

        @BeforeClass
        public void notStaticBC() {
        }

        @BeforeClass
        static void notPublicBC() {
        }

        @BeforeClass
        public static int nonVoidBC() {
            return 0;
        }

        @BeforeClass
        public static void argumentsBC(int i) {
        }

        @BeforeClass
        public static void fineBC() {
        }

        @AfterClass
        public void notStaticAC() {
        }

        @AfterClass
        static void notPublicAC() {
        }

        @AfterClass
        public static int nonVoidAC() {
            return 0;
        }

        @AfterClass
        public static void argumentsAC(int i) {
        }

        @AfterClass
        public static void fineAC() {
        }

        @After
        public static void staticA() {
        }

        @After
        void notPublicA() {
        }

        @After
        public int nonVoidA() {
            return 0;
        }

        @After
        public void argumentsA(int i) {
        }

        @After
        public void fineA() {
        }

        @Before
        public static void staticB() {
        }

        @Before
        void notPublicB() {
        }

        @Before
        public int nonVoidB() {
            return 0;
        }

        @Before
        public void argumentsB(int i) {
        }

        @Before
        public void fineB() {
        }

        @Test
        public static void staticT() {
        }

        @Test
        void notPublicT() {
        }

        @Test
        public int nonVoidT() {
            return 0;
        }

        @Test
        public void argumentsT(int i) {
        }

        @Test
        public void fineT() {
        }
    }
=====================================================================
Found a 73 line (246 tokens) duplication in the following files: 
Starting at line 235 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 235 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        assertThat(BeforesAndAfters.watchedLog, is("starting before test after succeeded finished "));
    }

    public static class WrongTypedField {
        @Rule
        public int x = 5;

        @Test
        public void foo() {
        }
    }

    @Test
    public void validateWrongTypedField() {
        assertThat(testResult(WrongTypedField.class),
                hasSingleFailureContaining("must implement MethodRule"));
    }

    public static class SonOfWrongTypedField extends WrongTypedField {

    }

    @Test
    public void validateWrongTypedFieldInSuperclass() {
        assertThat(testResult(SonOfWrongTypedField.class),
                hasSingleFailureContaining("must implement MethodRule"));
    }

    public static class PrivateRule {
        @Rule
        private TestRule rule = new TestName();

        @Test
        public void foo() {
        }
    }

    @Test
    public void validatePrivateRule() {
        assertThat(testResult(PrivateRule.class),
                hasSingleFailureContaining("must be public"));
    }

    public static class CustomTestName implements TestRule {
        public String name = null;

        public Statement apply(final Statement base, final Description description) {
            return new Statement() {
                @Override
                public void evaluate() throws Throwable {
                    name = description.getMethodName();
                    base.evaluate();
                }
            };
        }
    }

    public static class UsesCustomMethodRule {
        @Rule
        public CustomTestName counter = new CustomTestName();

        @Test
        public void foo() {
            assertEquals("foo", counter.name);
        }
    }

    @Test
    public void useCustomMethodRule() {
        assertThat(testResult(UsesCustomMethodRule.class), isSuccessful());
    }
    
    public static class HasMethodReturningMethodRule {
=====================================================================
Found a 11 line (123 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

    public static final class InheritanceAnyTest {
        @Test @Category(X.class) public void x() {}
        @Test @Category(Y.class) public void y() {}
        @Test @Category(Z.class) public void z() {}
        @Test @Category(W.class) public void w() { fail(); }
        @Test @Category(Q.class) public void q() { fail(); }
        @Test @Category(Runnable.class) public void runnable() { fail(); }
        @Test public void t() { fail(); }
    }

    public static final class InheritanceAllTest {
=====================================================================
Found a 18 line (115 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java

        String expected = expected(new String[]{".E", "Time: 0", "Errors here", "", "FAILURES!!!", "Tests run: 1,  Failures: 0,  Errors: 1", ""});
        ResultPrinter printer = new TestResultPrinter(new PrintStream(output)) {
            @Override
            public void printErrors(TestResult result) {
                getWriter().println("Errors here");
            }
        };
        runner.setPrinter(printer);
        TestSuite suite = new TestSuite();
        suite.addTest(new TestCase() {
            @Override
            public void runTest() throws Exception {
                throw new Exception();
            }
        });
        runner.doRun(suite);
        assertEquals(expected, output.toString());
    }
=====================================================================
Found a 23 line (98 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SortableTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SortableTest.java

            }
        }

        @Before
        public void resetLog() {
            log = "";
        }

        @Test
        public void sortingForwardWorksOnTestClassRunner() {
            Request forward = Request.aClass(SortMe.class).sortWith(forward());

            new JUnitCore().run(forward);
            assertEquals("abc", log);
        }

        @Test
        public void sortingBackwardWorksOnTestClassRunner() {
            Request backward = Request.aClass(SortMe.class).sortWith(backward());

            new JUnitCore().run(backward);
            assertEquals("cba", log);
        }
=====================================================================
Found a 9 line (91 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 144 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 154 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

        @Test @Category(Y.class) public void y() {}
        @Test @Category(Z.class) public void z() {}
        @Test @Category(W.class) public void w() { fail(); }
        @Test @Category(Q.class) public void q() { fail(); }
        @Test @Category(Runnable.class) public void runnable() { fail(); }
        @Test public void t() { fail(); }
    }

    public static final class InheritanceAllTest {
=====================================================================
Found a 25 line (91 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 625 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        assertEquals(1, ExampleTestWithCustomClassRule.counter.count);
    }

    private static final List<String> orderList = new LinkedList<String>();

    private static class OrderTestRule implements TestRule {
        private String name;

        public OrderTestRule(String name) {
            this.name = name;
        }

        public Statement apply(final Statement base, final Description description) {
            return new Statement() {
                @Override
                public void evaluate() throws Throwable {
                    orderList.add(name);
                    base.evaluate();
                }
            };
        }
    }

    public static class UsesFieldAndMethodRule {
        @ClassRule
=====================================================================
Found a 15 line (90 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java
Starting at line 64 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java

    public void testError() {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        TestRunner runner = new TestRunner(new TestResultPrinter(
                new PrintStream(output)));

        String expected = expected(new String[]{".E", "Time: 0",
                "Errors here", "", "FAILURES!!!",
                "Tests run: 1,  Failures: 0,  Errors: 1", ""});
        ResultPrinter printer = new TestResultPrinter(new PrintStream(output)) {
            @Override
            public void printErrors(TestResult result) {
                getWriter().println("Errors here");
            }
        };
        runner.setPrinter(printer);
=====================================================================
Found a 10 line (89 tokens) duplication in the following files: 
Starting at line 253 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java
Starting at line 282 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java

        Request request = Request.aClass(MalformedJUnit38TestMethod.class);
        JUnitCore core = new JUnitCore();
        Request sorted = fMax.sortRequest(request);
        Runner runner = sorted.getRunner();
        Result result = core.run(runner);
        Failure failure = result.getFailures().get(0);
        assertThat(failure.toString(), containsString("MalformedJUnit38TestMethod"));
        assertThat(failure.toString(), containsString("testNothing"));
        assertThat(failure.toString(), containsString("isn't public"));
    }
=====================================================================
Found a 10 line (85 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 95 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testMoneyBagEquals() {
        assertTrue(!fMB1.equals(null));

        assertEquals(fMB1, fMB1);
        IMoney equal = MoneyBag.create(new Money(12, "CHF"), new Money(7, "USD"));
        assertTrue(fMB1.equals(equal));
        assertTrue(!fMB1.equals(f12CHF));
        assertTrue(!f12CHF.equals(fMB1));
        assertTrue(!fMB1.equals(fMB2));
    }
=====================================================================
Found a 12 line (76 tokens) duplication in the following files: 
Starting at line 50 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java

        CountingListener listener = new CountingListener();
        assertThat(listener.fTestStarted.get(), is(0));
        fNotifier.addListener(listener);
        fNotifier.fireTestStarted(null);
        assertThat(listener.fTestStarted.get(), is(1));
        fNotifier.removeListener(listener);
        fNotifier.fireTestStarted(null);
        assertThat(listener.fTestStarted.get(), is(1));
    }

    @Test
    public void addFirstAndRemoveWithNonThreadSafeListener() {
=====================================================================
Found a 12 line (76 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java

        CountingListener listener = new CountingListener();
        assertThat(listener.fTestStarted.get(), is(0));
        fNotifier.addFirstListener(listener);
        fNotifier.fireTestStarted(null);
        assertThat(listener.fTestStarted.get(), is(1));
        fNotifier.removeListener(listener);
        fNotifier.fireTestStarted(null);
        assertThat(listener.fTestStarted.get(), is(1));
    }
    
    @Test
    public void addAndRemoveWithThreadSafeListener() {
=====================================================================
Found a 10 line (76 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AllOf.<T>allOf(first, second, third, fourth);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
=====================================================================
Found a 10 line (76 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AnyOf.<T>anyOf(first, second, third, fourth);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.core.AnyOf<T> anyOf(org.hamcrest.Matcher<T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
=====================================================================
Found a 2 line (72 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth, org.hamcrest.Matcher<? super T> sixth) {
    return org.hamcrest.core.AllOf.<T>allOf(first, second, third, fourth, fifth, sixth);
=====================================================================
Found a 6 line (71 tokens) duplication in the following files: 
Starting at line 135 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 145 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 155 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 165 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

        @Test @Category(Z.class) public void z() {}
        @Test @Category(W.class) public void w() { fail(); }
        @Test @Category(Q.class) public void q() { fail(); }
        @Test @Category(Runnable.class) public void runnable() { fail(); }
        @Test public void t() { fail(); }
    }
=====================================================================
Found a 14 line (70 tokens) duplication in the following files: 
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 79 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java

        runner.doRun(suite);
        assertEquals(expected, output.toString());
    }

    private String expected(String[] lines) {
        OutputStream expected = new ByteArrayOutputStream();
        PrintStream expectedWriter = new PrintStream(expected);
        for (int i = 0; i < lines.length; i++) {
            expectedWriter.println(lines[i]);
        }
        return expected.toString();
    }

}
=====================================================================
Found a 17 line (70 tokens) duplication in the following files: 
Starting at line 136 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 655 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public static OrderTestRule orderField = new OrderTestRule("orderField");

        @Test
        public void foo() {
            assertEquals("orderField", orderList.get(0));
            assertEquals("orderMethod", orderList.get(1));
        }
    }

    @Test
    public void usesFieldAndMethodRule() {
        orderList.clear();
        assertThat(testResult(UsesFieldAndMethodRule.class), isSuccessful());
    }


    public static class MethodExampleTestWithClassRule {
=====================================================================
Found a 22 line (70 tokens) duplication in the following files: 
Starting at line 294 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 348 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        public BeforeParamAndAfterParam(String x) {
            this.x = x;
        }

        @Parameters
        public static Collection<String> data() {
            return Arrays.asList("A", "B");
        }

        @Test
        public void first() {
            fLog += "first(" + x + ") ";
        }

        @Test
        public void second() {
            fLog += "second(" + x + ") ";
        }
    }

    @Test
    public void beforeParamAndAfterParamAreRun() {
=====================================================================
Found a 25 line (69 tokens) duplication in the following files: 
Starting at line 432 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 23 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\SampleJUnit4Tests.java

        }
    }
 
    private static class FakeClassUnderTest {
        
        public void throwsExceptionWithCause() {
            doThrowExceptionWithCause();
        }

        public void throwsExceptionWithoutCause() {
            doThrowExceptionWithoutCause();
        }

        private void doThrowExceptionWithCause() {
            try {
                throwsExceptionWithoutCause();
            } catch (Exception e) {
                throw new RuntimeException("outer", e);
            }
        }

        private void doThrowExceptionWithoutCause() {
            throw new RuntimeException("cause");
        }
    }
=====================================================================
Found a 8 line (68 tokens) duplication in the following files: 
Starting at line 202 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 528 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

    public void succeeded() {
        WatchmanTest.watchedLog = "";
        JUnitCore.runClasses(WatchmanTest.class);
        assertThat(WatchmanTest.watchedLog, containsString(String.format("fails(%s) AssertionError", WatchmanTest.class.getName())));
        assertThat(WatchmanTest.watchedLog, containsString(String.format("succeeds(%s) success!", WatchmanTest.class.getName())));
    }

    public static class BeforesAndAfters {
=====================================================================
Found a 11 line (67 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\TestClass.java
Starting at line 171 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java

    private List<Class<?>> getSuperClasses(Class<?> testClass) {
        List<Class<?>> results = new ArrayList<Class<?>>();
        Class<?> current = testClass;
        while (current != null) {
            results.add(current);
            current = current.getSuperclass();
        }
        return results;
    }

    public Constructor<?> getConstructor() throws SecurityException, NoSuchMethodException {
=====================================================================
Found a 2 line (67 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth, Matcher<? super T> sixth) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(6);
=====================================================================
Found a 14 line (66 tokens) duplication in the following files: 
Starting at line 237 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 275 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java

            description.appendText("A stack trace line for method " + method);
        }

        @Override
        protected boolean matchesSafely(String line) {
            if (!line.startsWith("\t")) {
                return false;
            }

            line = line.substring(1);
            java.util.regex.Matcher matcher = PATTERN.matcher(line);
            if (!matcher.matches()) {
                fail("Line does not look like a stack trace line: " + line);
            }
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 143 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

    public static class AdditionTest {
        @Parameters(name = "{index}: {0} + {1} = {2}")
        public static Iterable<Object[]> data() {
            return Arrays.asList(new Object[][] { { 0, 0, 0 }, { 1, 1, 2 },
                    { 3, 2, 5 }, { 4, 3, 7 } });
        }
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagMultiply() {
        // {[12 CHF][7 USD]} *2 == {[24 CHF][14 USD]}
        IMoney expected = MoneyBag.create(new Money(24, "CHF"), new Money(14, "USD"));
        assertEquals(expected, fMB1.multiply(2));
        assertEquals(fMB1, fMB1.multiply(1));
        assertTrue(fMB1.multiply(0).isZero());
    }
=====================================================================
Found a 13 line (65 tokens) duplication in the following files: 
Starting at line 137 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java

        assertEquals("One test should fail", 1, result.getFailureCount());
        Failure failure = result.getFailures().get(0);

        assertHasTrimmedTrace(failure,
                message("java.lang.RuntimeException: cause"),
                at("org.junit.internal.StackTracesTest$FakeClassUnderTest.doThrowExceptionWithoutCause"),
                at("org.junit.internal.StackTracesTest$FakeClassUnderTest.throwsExceptionWithoutCause"),
                at("org.junit.internal.StackTracesTest$ThrowingTestRule.apply"));
        assertNotEquals(failure.getTrace(), failure.getTrimmedTrace());
    }

    @Test
    public void getTrimmedStackForJUnit4TestFailingInClassRule() {
=====================================================================
Found a 8 line (64 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 69 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java

        String expected = expected(new String[]{".E", "Time: 0", "Errors here", "", "FAILURES!!!", "Tests run: 1,  Failures: 0,  Errors: 1", ""});
        ResultPrinter printer = new TestResultPrinter(new PrintStream(output)) {
            @Override
            public void printErrors(TestResult result) {
                getWriter().println("Errors here");
            }
        };
        runner.setPrinter(printer);
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AllOf.<T>allOf(first, second, third);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth) {
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AnyOf.<T>anyOf(first, second, third);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.core.AnyOf<T> anyOf(org.hamcrest.Matcher<T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth) {
=====================================================================
Found a 8 line (63 tokens) duplication in the following files: 
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testMoneyEquals() {
        assertTrue(!f12CHF.equals(null));
        Money equalMoney = new Money(12, "CHF");
        assertEquals(f12CHF, f12CHF);
        assertEquals(f12CHF, equalMoney);
        assertEquals(f12CHF.hashCode(), equalMoney.hashCode());
        assertTrue(!f12CHF.equals(f14CHF));
    }
=====================================================================
Found a 19 line (63 tokens) duplication in the following files: 
Starting at line 16 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\JUnit38SortingTest.java
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java

public class JUnit38SortingTest {
    private MaxCore fMax;
    private File fMaxFile;

    @Before
    public void createMax() {
        fMaxFile = new File("MaxCore.ser");
        if (fMaxFile.exists()) {
            fMaxFile.delete();
        }
        fMax = MaxCore.storedLocally(fMaxFile);
    }

    @After
    public void forgetMax() {
        fMaxFile.delete();
    }

    public static class JUnit4Test {
=====================================================================
Found a 9 line (62 tokens) duplication in the following files: 
Starting at line 19 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 28 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    protected void setUp() {
        f12CHF = new Money(12, "CHF");
        f14CHF = new Money(14, "CHF");
        f7USD = new Money(7, "USD");
        f21USD = new Money(21, "USD");

        fMB1 = MoneyBag.create(f12CHF, f7USD);
        fMB2 = MoneyBag.create(f14CHF, f21USD);
    }
=====================================================================
Found a 8 line (62 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

        Result testResult= JUnitCore.runClasses(InheritanceAny.class);
        assertThat("unexpected run count", testResult.getRunCount(), is(equalTo(3)));
        assertThat("unexpected failure count", testResult.getFailureCount(), is(equalTo(0)));
        assertThat("unexpected failure count", testResult.getIgnoreCount(), is(equalTo(0)));
    }

    @Test
    public void inheritanceAllIncluded() {
=====================================================================
Found a 24 line (62 tokens) duplication in the following files: 
Starting at line 94 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java
Starting at line 124 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java
Starting at line 154 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java

    static class DummySortWithDefault {
        Object alpha(int i, double d, Thread t) {
            return null;
        }

        void beta(int[][] x) {
        }

        int gamma() {
            return 0;
        }

        void gamma(boolean b) {
        }

        void delta() {
        }

        void epsilon() {
        }
    }

    @Test
    public void testDefaultMethodSorter() {
=====================================================================
Found a 10 line (61 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 120 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 135 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 165 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java

        Result result = runTest(TestWithOneThrowingTestMethod.class);
        assertEquals("Should run the test", 1, result.getRunCount());
        assertEquals("One test should fail", 1, result.getFailureCount());
        Failure failure = result.getFailures().get(0);

        assertHasTrimmedTrace(failure,
                message("java.lang.RuntimeException: cause"),
                at("org.junit.internal.StackTracesTest$FakeClassUnderTest.doThrowExceptionWithoutCause"),
                at("org.junit.internal.StackTracesTest$FakeClassUnderTest.throwsExceptionWithoutCause"),
                at("org.junit.internal.StackTracesTest$TestWithOneThrowingTestMethod.alwaysThrows"));
=====================================================================
Found a 6 line (60 tokens) duplication in the following files: 
Starting at line 109 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 157 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

    public void infiniteLoop() throws Exception {
        JUnitCore core = new JUnitCore();
        Result result = core.run(InfiniteLoopTest.class);
        assertEquals(1, result.getRunCount());
        assertEquals(1, result.getFailureCount());
        Throwable exception = result.getFailures().get(0).getException();
=====================================================================
Found a 2 line (60 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
    return org.hamcrest.core.AllOf.<T>allOf(first, second, third, fourth, fifth);
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

                INCLUDES_DUMMY_CATEGORY_0,
                DummyTestClass.class.getName(),
                DummyTestClass0.class.getName(),
                DummyTestClass1.class.getName(),
                DummyTestClass01.class.getName(),
                DummyTestClass0TestMethod1.class.getName());

        assertWasNotRun(DummyTestClass.class);
        assertWasRun(DummyTestClass0.class);
        assertWasNotRun(DummyTestClass1.class);
=====================================================================
Found a 5 line (59 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java
Starting at line 109 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java

        d = Description.createTestDescription(clazz, "tessed", clazz.getMethod("tessed").getAnnotations());
        assertEquals(clazz, d.getTestClass());
        assertEquals("tessed", d.getMethodName());
        assertEquals(1, d.getAnnotations().size());
        assertEquals(Test.class, d.getAnnotations().iterator().next().annotationType());
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 176 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java
Starting at line 202 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java

        Assert.assertEquals(0, countingRunListener.testSuiteAssumptionFailure);

        Assert.assertEquals(0, countingRunListener.testStarted);
        Assert.assertEquals(0, countingRunListener.testFinished);
        Assert.assertEquals(0, countingRunListener.testFailure);
        Assert.assertEquals(0, countingRunListener.testAssumptionFailure);
        Assert.assertEquals(0, countingRunListener.testIgnored);
    }

    public static class AssumptionViolatedAtParentLevelTest {
=====================================================================
Found a 12 line (59 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 121 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java

        matchers.add(fourth);
        return allOf(matchers);
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth) {
=====================================================================
Found a 2 line (59 tokens) duplication in the following files: 
Starting at line 115 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(5);
=====================================================================
Found a 15 line (58 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\ClassRoadie.java
Starting at line 133 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\MethodRoadie.java

                    before.invoke(null);
                }
            } catch (InvocationTargetException e) {
                throw e.getTargetException();
            }
        } catch (AssumptionViolatedException e) {
            throw new FailedBefore();
        } catch (Throwable e) {
            addFailure(e);
            throw new FailedBefore();
        }
    }

    private void runAfters() {
        List<Method> afters = testClass.getAfters();
=====================================================================
Found a 21 line (58 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java
Starting at line 94 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java
Starting at line 124 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java
Starting at line 154 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java

    static class DummySortWithoutAnnotation {
        Object alpha(int i, double d, Thread t) {
            return null;
        }

        void beta(int[][] x) {
        }

        int gamma() {
            return 0;
        }

        void gamma(boolean b) {
        }

        void delta() {
        }

        void epsilon() {
        }
    }
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 192 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 201 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        CategoryFilter include = CategoryFilter.exclude(SlowTests.class);
        Request baseRequest = Request.aClass(TestSuiteWithNoCategories.class);
        Result result = new JUnitCore().run(baseRequest.filterWith(include));
        assertEquals(2, result.getFailureCount());
        assertEquals(2, result.getRunCount());
    }

    @Test
    public void testCountWithExplicitExcludeFilter_usingConstructor() throws Throwable {
=====================================================================
Found a 14 line (57 tokens) duplication in the following files: 
Starting at line 178 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 499 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public TestRule watcher = new TestWatcher() {
            @Override
            protected void failed(Throwable e, Description description) {
                watchedLog += description + " "
                        + e.getClass().getSimpleName() + "\n";
            }

            @Override
            protected void succeeded(Description description) {
                watchedLog += description + " " + "success!\n";
            }
        };

        @Test
=====================================================================
Found a 12 line (57 tokens) duplication in the following files: 
Starting at line 94 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 111 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        matchers.add(fourth);
        return anyOf(matchers);
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth) {
=====================================================================
Found a 10 line (56 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 64 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 76 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java

        fNotifier.addListener(listener);
        fNotifier.fireTestStarted(null);
        assertThat(listener.fTestStarted.get(), is(1));
        fNotifier.removeListener(listener);
        fNotifier.fireTestStarted(null);
        assertThat(listener.fTestStarted.get(), is(1));
    }

    @Test
    public void addFirstAndRemoveWithNonThreadSafeListener() {
=====================================================================
Found a 16 line (55 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 339 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

    public static class BothKindsOfRule implements TestRule, org.junit.rules.MethodRule {
        public int applications = 0;

        public Statement apply(Statement base, FrameworkMethod method,
                Object target) {
            applications++;
            return base;
        }

        public Statement apply(Statement base, Description description) {
            applications++;
            return base;
        }
    }

    public static class OneFieldTwoKindsOfRule {
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>();
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
        matchers.add(fifth);
=====================================================================
Found a 4 line (54 tokens) duplication in the following files: 
Starting at line 142 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 162 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

    public static final class InheritanceAllTest {
        @Test @Category(X.class) public void x() { fail(); }
        @Test @Category(Y.class) public void y() { fail(); }
        @Test @Category(Z.class) public void z() {}
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 99 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java

        });

        Runner runner = jUnitCommandLineParseResult.createRequest(new Computer()).getRunner();
        Description description = runner.getDescription().getChildren().get(0);

        assertThat(description.toString(), containsString("initializationError"));
    }

    @Test
    public void shouldCreateFailureUponUncreatedFilter() throws Exception {
=====================================================================
Found a 11 line (53 tokens) duplication in the following files: 
Starting at line 28 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\parameterized\ParameterizedNamesTest.java
Starting at line 35 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\description\TestDescriptionMethodNameTest.java

                    new Object[]{"\n"},
                    new Object[]{"\r\n"},
                    new Object[]{"\r"},
                    new Object[]{"\u0085"},
                    new Object[]{"\u2028"},
                    new Object[]{"\u2029"}
            );
        }

        @Test
        public void test() {
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 126 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 160 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testNormalize4() {
        // [12 CHF] - {[12 CHF][3 USD]} == [-3 USD]
        IMoney ms1 = MoneyBag.create(new Money(12, "CHF"), new Money(3, "USD"));
        Money expected = new Money(-3, "USD");
        assertEquals(expected, f12CHF.subtract(ms1));
    }
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

                DummyTestClass.class.getName(),
                DummyTestClass0.class.getName(),
                DummyTestClass1.class.getName(),
                DummyTestClass01.class.getName(),
                DummyTestClass0TestMethod1.class.getName());

        assertWasRun(DummyTestClass.class);
        assertWasRun(DummyTestClass0.class);
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 99 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java

        jUnitCommandLineParseResult.parseOptions("--filter");

        Runner runner = jUnitCommandLineParseResult.createRequest(new Computer()).getRunner();
        Description description = runner.getDescription().getChildren().get(0);

        assertThat(description.toString(), containsString("initializationError"));
    }

    @Test
    public void shouldParseFilterArgInWhichValueIsASeparateArg() throws Exception {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AllOf.<T>allOf(first, second);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third) {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AnyOf.<T>anyOf(matchers);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.core.AnyOf<T> anyOf(org.hamcrest.Matcher<T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third) {
=====================================================================
Found a 14 line (51 tokens) duplication in the following files: 
Starting at line 312 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\parameterized\TestWithParameters.java

        return (clazz == null) ? 0 : clazz.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 162 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\parameterized\BlockJUnit4ClassRunnerWithParameters.java
Starting at line 180 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\parameterized\BlockJUnit4ClassRunnerWithParameters.java

            super(next, befores, null);
        }

        @Override
        protected void invokeMethod(FrameworkMethod method) throws Throwable {
            int paramCount = method.getMethod().getParameterTypes().length;
            method.invokeExplosively(null, paramCount == 0 ? (Object[]) null : parameters);
        }
    }
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\SimpleTest.java
Starting at line 38 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\SimpleTest.java

    public void testEquals() {
        assertEquals(12, 12);
        assertEquals(12L, 12L);
        assertEquals(new Long(12), new Long(12));

        assertEquals("Size", 12, 13);
        assertEquals("Capacity", 12.0, 11.99, 0.0);
    }
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testNormalize3() {
        // {[12 CHF][7 USD]} - {[12 CHF][3 USD]} == [4 USD]
        IMoney ms1 = MoneyBag.create(new Money(12, "CHF"), new Money(3, "USD"));
        Money expected = new Money(4, "USD");
        assertEquals(expected, fMB1.subtract(ms1));
    }
=====================================================================
Found a 1 line (51 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
=====================================================================
Found a 1 line (51 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth, org.hamcrest.Matcher<? super T> sixth) {
=====================================================================
Found a 12 line (51 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 121 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java

        matchers.add(third);
        return allOf(matchers);
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth) {
=====================================================================
Found a 2 line (51 tokens) duplication in the following files: 
Starting at line 99 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(4);
=====================================================================
Found a 31 line (50 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\ComparisonFailure.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\ComparisonFailure.java

        fActual = actual;
    }

    /**
     * Returns "..." in place of common prefix and "..." in
     * place of common suffix between expected and actual.
     *
     * @see Throwable#getMessage()
     */
    @Override
    public String getMessage() {
        return new ComparisonCompactor(MAX_CONTEXT_LENGTH, fExpected, fActual).compact(super.getMessage());
    }

    /**
     * Gets the actual string value
     *
     * @return the actual string value
     */
    public String getActual() {
        return fActual;
    }

    /**
     * Gets the expected string value
     *
     * @return the expected string value
     */
    public String getExpected() {
        return fExpected;
    }
=====================================================================
Found a 15 line (50 tokens) duplication in the following files: 
Starting at line 248 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 569 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        public BeforeAndAfter(int x) {

        }

        @Parameters
        public static Collection<Object[]> data() {
            return Arrays.asList(new Object[][]{{3}});
        }

        @Test
        public void aTest() {
        }
    }

    @Test
=====================================================================
Found a 19 line (50 tokens) duplication in the following files: 
Starting at line 618 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 665 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        public final TestRule rule = new ExternalResource() {
            @Override
            protected void before() throws Throwable {
                log += "sub.rule.before() ";
            }

            @Override
            protected void after() {
                log += "sub.rule.after() ";
            }
        };

        @Test
        public void test() {
            log += "Test ";
        }
    }

    public void testFieldsNeverTreatedAsShadowed() throws Exception {
=====================================================================
Found a 14 line (49 tokens) duplication in the following files: 
Starting at line 219 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 671 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        static int countOfMethodCalls = 0;

        private static class Dummy implements TestRule {
            public Statement apply(final Statement base, Description description) {
                return new Statement() {
                    @Override
                    public void evaluate() throws Throwable {
                        base.evaluate();
                    }
                };
            }
        }

        @ClassRule
=====================================================================
Found a 13 line (49 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 309 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public TestRule example = new TestRule() {
            public Statement apply(final Statement base, Description description) {
                return new Statement() {
                    @Override
                    public void evaluate() throws Throwable {
                        wasRun = true;
                        base.evaluate();
                    }
                };
            }
        };

        @Test
=====================================================================
Found a 7 line (49 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 99 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 124 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java

        });

        Runner runner = jUnitCommandLineParseResult.createRequest(new Computer()).getRunner();
        Description description = runner.getDescription().getChildren().get(0);

        assertThat(description.toString(), containsString("initializationError"));
    }
=====================================================================
Found a 5 line (49 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        Result result = runner.run(FailureTest.class);
        assertEquals(1, result.getRunCount());
        assertEquals(1, result.getFailureCount());
        assertEquals(AssertionError.class, result.getFailures().get(0).getException().getClass());
    }
=====================================================================
Found a 10 line (49 tokens) duplication in the following files: 
Starting at line 200 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 213 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

    public static class InfiniteLoopWithStuckThreadTest {
        @Rule
        public TestRule globalTimeout = Timeout.builder()
            .withTimeout(100, TimeUnit.MILLISECONDS)
            .withLookingForStuckThread(true)
            .build();

        @Test
        public void failure() throws Exception {
            (new InfiniteLoopMultithreaded()).failure(false);
=====================================================================
Found a 12 line (49 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 94 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 111 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        matchers.add(third);
        return anyOf(matchers);
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth) {
=====================================================================
Found a 6 line (49 tokens) duplication in the following files: 
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>();
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java
Starting at line 41 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java

        Collection<Field> fields = super.getSingleDataPointFields(sig);        
        String requestedName = sig.getAnnotation(FromDataPoints.class).value();

        List<Field> fieldsWithMatchingNames = new ArrayList<Field>();
        
        for (Field field : fields) {
            String[] fieldNames = field.getAnnotation(DataPoint.class).value();
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java
Starting at line 75 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java

        Collection<FrameworkMethod> methods = super.getSingleDataPointMethods(sig);
        String requestedName = sig.getAnnotation(FromDataPoints.class).value();
        
        List<FrameworkMethod> methodsWithMatchingNames = new ArrayList<FrameworkMethod>();
        
        for (FrameworkMethod method : methods) {
            String[] methodNames = method.getAnnotation(DataPoint.class).value();
=====================================================================
Found a 4 line (48 tokens) duplication in the following files: 
Starting at line 231 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 244 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java

    private static final class FieldMustBeARule implements RuleValidator {
        public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {
            if (!isRuleType(member)) {
                errors.add(new ValidationError(member, annotation,
=====================================================================
Found a 5 line (48 tokens) duplication in the following files: 
Starting at line 256 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 269 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java

    private static final class MethodMustBeATestRule implements RuleValidator {
        public void validate(FrameworkMember<?> member,
                Class<? extends Annotation> annotation, List<Throwable> errors) {
            if (!isTestRule(member)) {
                errors.add(new ValidationError(member, annotation, 
=====================================================================
Found a 11 line (48 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 205 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckCallableThatThrowsAnException {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkSucceeds(new Callable<Object>() {
                public Object call() throws Exception {
                    throw new RuntimeException("first!");
                }
            });
=====================================================================
Found a 10 line (48 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java

            createdFiles[0] = (File) method.invoke(folder, subfolder);
            new File(createdFiles[0], filename).createNewFile();

            File expectedFile = new File(folder.getRoot(), join(subfolder, filename));

            assertTrue(expectedFile.exists());
        }

        @Test
        public void testUsingTempFolderString() throws IOException {
=====================================================================
Found a 7 line (48 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 124 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java

        jUnitCommandLineParseResult.parseOptions("--filter");

        Runner runner = jUnitCommandLineParseResult.createRequest(new Computer()).getRunner();
        Description description = runner.getDescription().getChildren().get(0);

        assertThat(description.toString(), containsString("initializationError"));
    }
=====================================================================
Found a 18 line (48 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SortableTest.java
Starting at line 131 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SortableTest.java

    public static class TestClassRunnerIsSortable {
        private static String log = "";

        public static class SortMe {
            @Test
            public void a() {
                log += "a";
            }

            @Test
            public void b() {
                log += "b";
            }

            @Test
            public void c() {
                log += "c";
            }
=====================================================================
Found a 4 line (48 tokens) duplication in the following files: 
Starting at line 127 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 147 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        Result runner = core.run(SetupFailureTest.class);
        assertEquals(1, runner.getRunCount());
        assertEquals(1, runner.getFailureCount());
        assertEquals(Error.class, runner.getFailures().get(0).getException().getClass());
=====================================================================
Found a 2 line (48 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth) {
    return org.hamcrest.core.AllOf.<T>allOf(first, second, third, fourth);
=====================================================================
Found a 4 line (47 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 76 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testIsZero() {
        assertTrue(fMB1.subtract(fMB1).isZero());
        assertTrue(MoneyBag.create(new Money(0, "CHF"), new Money(0, "USD")).isZero());
    }
=====================================================================
Found a 9 line (47 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\AllTests.java

public class AllTests {

    public static void main(String[] args) {
        junit.textui.TestRunner.run(suite());
    }

    public static Test suite() { // Collect tests manually because we have to test class collection code
        TestSuite suite = new TestSuite("Framework Tests");
        suite.addTestSuite(ExtensionTest.class);
=====================================================================
Found a 16 line (47 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 65 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java

    public static class ParameterizedTestWithoutCategory {
        @Parameters
        public static Iterable<String> getParameters() {
            return Arrays.asList("first", "second");
        }

        @Parameterized.Parameter
        public String value;

        @Test
        public void testSomething() {
            Assert.assertTrue(true);
        }
    }

    @Category(Token.class)
=====================================================================
Found a 17 line (47 tokens) duplication in the following files: 
Starting at line 260 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 291 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java

        public static TestRule z() {
            return new LoggingTestRule(log, "inner");
        }

        @Test
        public void foo() {
            log.append(" foo");
        }

        @Test
        public void bar() {
            log.append(" bar");
        }
    }

    @Test
    public void classRuleOrdering() {
=====================================================================
Found a 12 line (47 tokens) duplication in the following files: 
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 385 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

    public static class MultipleRuleTest {
        private static class Increment implements TestRule {
            public Statement apply(final Statement base, Description description) {
                return new Statement() {
                    @Override
                    public void evaluate() throws Throwable {
                        runCount++;
                        base.evaluate();
                    }
                };
            }
        }
=====================================================================
Found a 3 line (47 tokens) duplication in the following files: 
Starting at line 344 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 356 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

            assertArrayEquals("message", new Object[][]{{true, true}, {false, false}}, new Object[][]{{true, true}, {false}});
        } catch (AssertionError exception) {
            assertEquals("message: array lengths differed, expected.length=2 actual.length=1; arrays first differed at element [1][1]; expected:<false> but was:<end of array>", exception.getMessage());
=====================================================================
Found a 16 line (47 tokens) duplication in the following files: 
Starting at line 97 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 117 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java

    public static class HasWronglyIgnoredFailingSingleDataPointMethod {
        @DataPoint
        public static int num = 10;

        @DataPoint(ignoredExceptions=NullPointerException.class)
        public static int failingDataPoint() {
            throw new RuntimeException();
        }

        @Theory
        public void theory(int x) {
        }
    }    
    
    @Test
    public void shouldNotIgnoreNonMatchingSingleDataPointExceptions() {
=====================================================================
Found a 19 line (47 tokens) duplication in the following files: 
Starting at line 148 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 594 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        }

        @Parameter(0)
        public int firstSummand;

        @Parameter(1)
        public int secondSummand;

        @Parameter(2)
        public int sum;

        @Test
        public void test() {
            assertEquals(sum, firstSummand + secondSummand);
        }
    }

    @Test
    public void providesDataByAnnotatedFields() {
=====================================================================
Found a 8 line (47 tokens) duplication in the following files: 
Starting at line 141 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerFilteringTest.java
Starting at line 158 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerFilteringTest.java

        Request request = Request.aClass(ExampleTest.class);
        CountingFilter countingFilter = new CountingFilter();
        Request requestFiltered = request.filterWith(countingFilter);
        Result result = junitCore.run(requestFiltered);
        assertEquals(1, result.getRunCount());
        assertEquals(0, result.getFailureCount());

        Description desc = createTestDescription(ExampleTest.class, "test1");
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 69 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 120 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 135 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 165 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 181 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java

        Result result = runTest(TestWithOneThrowingTestMethod.class);
        assertEquals("Should run the test", 1, result.getRunCount());
        assertEquals("One test should fail", 1, result.getFailureCount());
        Failure failure = result.getFailures().get(0);

        assertHasTrimmedTrace(failure,
                message("java.lang.RuntimeException: cause"),
=====================================================================
Found a 17 line (46 tokens) duplication in the following files: 
Starting at line 156 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 194 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java

        public static Counter getCounter() {
            return counter;
        }

        @Test
        public void firstTest() {
            assertEquals(1, counter.count);
        }

        @Test
        public void secondTest() {
            assertEquals(1, counter.count);
        }
    }

    @Test
    public void methodRuleIsAppliedOnce() {
=====================================================================
Found a 6 line (46 tokens) duplication in the following files: 
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java

        Request request = Request.aClass(TwoTests.class);
        fMax.run(request);
        List<Description> tests = fMax.sortedLeavesForTest(request);
        Description dontSucceed = Description.createTestDescription(
                TwoTests.class, "dontSucceed");
        assertEquals(dontSucceed, tests.get(0));
=====================================================================
Found a 9 line (45 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\AllTests.java

public class AllTests {

    public static void main(String[] args) {
        junit.textui.TestRunner.run(suite());
    }

    public static Test suite() {
        TestSuite suite = new TestSuite("Framework Tests");
        suite.addTest(junit.tests.framework.AllTests.suite());
=====================================================================
Found a 7 line (45 tokens) duplication in the following files: 
Starting at line 21 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java
Starting at line 48 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java

        Test test = createActiveTestSuite();
        TestResult result = new TestResult();
        test.run(result);
        assertEquals(100, result.runCount());
        assertEquals(0, result.failureCount());
        assertEquals(0, result.errorCount());
    }
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 22 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(java.lang.Iterable<org.hamcrest.Matcher<? super T>> matchers) {
    return org.hamcrest.core.AllOf.<T>allOf(matchers);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T>... matchers) {
=====================================================================
Found a 4 line (44 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 107 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testMoneyBagHash() {
        IMoney equal = MoneyBag.create(new Money(12, "CHF"), new Money(7, "USD"));
        assertEquals(fMB1.hashCode(), equal.hashCode());
    }
=====================================================================
Found a 7 line (44 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 80 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

        assertThat("unexpected run count", testResult.getRunCount(), is(equalTo(3)));
        assertThat("unexpected failure count", testResult.getFailureCount(), is(equalTo(0)));
        assertThat("unexpected failure count", testResult.getIgnoreCount(), is(equalTo(0)));
    }

    @Test
    public void inheritanceAllIncluded() {
=====================================================================
Found a 12 line (44 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 308 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java

    private static class TestMethodRule implements MethodRule {

        public Statement apply(final Statement base, FrameworkMethod method, Object target) {
            return new Statement() {
                @Override
                public void evaluate() throws Throwable {
                    ruleWasEvaluated = true;
                    base.evaluate();
                }
            };
        }
    }
=====================================================================
Found a 11 line (44 tokens) duplication in the following files: 
Starting at line 167 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\ParameterizedTestMethodTest.java
Starting at line 170 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TestMethodTest.java

                {SubShadows.class, 0}});
    }

    private List<Throwable> validateAllMethods(Class<?> clazz) {
        try {
            new BlockJUnit4ClassRunner(clazz);
        } catch (InitializationError e) {
            return e.getCauses();
        }
        return Collections.emptyList();
    }
=====================================================================
Found a 16 line (43 tokens) duplication in the following files: 
Starting at line 229 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java
Starting at line 263 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java

        collectAnnotatedFieldValues(test, annotationClass, valueClass,
                new MemberValueConsumer<T>() {
                    public void accept(FrameworkMember member, T value) {
                        results.add(value);
                    }
                });
        return results;
    }

    /**
     * Finds the fields annotated with the specified annotation and having the specified type,
     * retrieves the values and passes those to the specified consumer.
     *
     * @since 4.13
     */
    public <T> void collectAnnotatedFieldValues(Object test,
=====================================================================
Found a 5 line (43 tokens) duplication in the following files: 
Starting at line 49 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagSubtract() {
        // {[12 CHF][7 USD]} - {[14 CHF][21 USD] == {[-2 CHF][-14 USD]}
        IMoney expected = MoneyBag.create(new Money(-2, "CHF"), new Money(-14, "USD"));
        assertEquals(expected, fMB1.subtract(fMB2));
    }
=====================================================================
Found a 8 line (43 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 107 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 167 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java

        assertEquals("One test should fail", 1, result.getFailureCount());
        Failure failure = result.getFailures().get(0);

        assertHasTrimmedTrace(failure,
                message("java.lang.RuntimeException: cause"),
                at("org.junit.internal.StackTracesTest$FakeClassUnderTest.doThrowExceptionWithoutCause"),
                at("org.junit.internal.StackTracesTest$FakeClassUnderTest.throwsExceptionWithoutCause"),
                at("org.junit.internal.StackTracesTest$TestWithOneThrowingTestMethod.alwaysThrows"));
=====================================================================
Found a 12 line (43 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 121 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java

        matchers.add(second);
        return allOf(matchers);
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third) {
=====================================================================
Found a 2 line (43 tokens) duplication in the following files: 
Starting at line 84 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(3);
=====================================================================
Found a 5 line (43 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second, Matcher<? super T> third) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>();
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
=====================================================================
Found a 10 line (42 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\Money.java
Starting at line 58 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyBag.java

    }

    @Override
    public boolean equals(Object anObject) {
        if (isZero()) {
            if (anObject instanceof IMoney) {
                return ((IMoney) anObject).isZero();
            }
        }
        if (anObject instanceof Money) {
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 48 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagNegate() {
        // {[12 CHF][7 USD]} negate == {[-12 CHF][-7 USD]}
        IMoney expected = MoneyBag.create(new Money(-12, "CHF"), new Money(-7, "USD"));
        assertEquals(expected, fMB1.negate());
    }
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 108 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 139 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testSimplify() {
        IMoney money = MoneyBag.create(new Money(26, "CHF"), new Money(28, "CHF"));
        assertEquals(new Money(54, "CHF"), money);
    }
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\JavadocTest.java
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\JavadocTest.java

        Result testResult= JUnitCore.runClasses(SlowTestSuite.class);
        assertTrue(testResult.wasSuccessful());
        assertThat("unexpected run count", testResult.getRunCount(), is(2));
        assertThat("unexpected failure count", testResult.getFailureCount(), is(0));
    }
=====================================================================
Found a 13 line (42 tokens) duplication in the following files: 
Starting at line 20 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\runners\statements\ExpectExceptionTest.java
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\runners\statements\ExpectExceptionTest.java

        Statement delegate = new Fail(new AssumptionViolatedException("expected"));
        ExpectException expectException = new ExpectException(delegate, AssumptionViolatedException.class);

        try {
            expectException.evaluate();
            // then AssumptionViolatedException should not be thrown
        } catch (Throwable e) { // need to explicitly catch and re-throw as an AssertionError or it might be skipped
            fail("should not throw anything, but was thrown: " + e);
        }
    }

    @Test
    public void whenExpectingAssumptionViolatedExceptionStatementsThrowingSubclassShouldPass() {
=====================================================================
Found a 9 line (42 tokens) duplication in the following files: 
Starting at line 268 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 282 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckRunnableThatThrowsExpectedTypeOfException {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkThrows(IllegalArgumentException.class, new ThrowingRunnable() {
                public void run() throws Throwable {
                    throw new IllegalArgumentException();
=====================================================================
Found a 12 line (42 tokens) duplication in the following files: 
Starting at line 443 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 470 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

            protected void failed(Throwable e, Description description) {
                log += description + " " + e.getClass().getSimpleName();
            }
        };

        @Rule
        public TestRule getWatchman() {
            return watchman;
        }

        @Test
        public void nothing() {
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

                EXCLUDES_DUMMY_CATEGORY_1,
                DummyTestClass.class.getName(),
                DummyTestClass0.class.getName(),
                DummyTestClass1.class.getName(),
                DummyTestClass01.class.getName(),
                DummyTestClass0TestMethod1.class.getName());
=====================================================================
Found a 13 line (42 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\SynchronizedRunListenerTest.java
Starting at line 84 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\SynchronizedRunListenerTest.java

        }

        @Override
        public int hashCode() {
            return fName.hashCode();
        }

        @Override
        public boolean equals(Object obj) {
            if (this == obj) {
                return true;
            }
            if (!(obj instanceof MethodSignature)) {
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 159 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 243 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        Result result = core.run(InfiniteLoopTest.class);
        assertEquals(1, result.getRunCount());
        assertEquals(1, result.getFailureCount());
        Throwable exception = result.getFailures().get(0).getException();
        assertThat(stackForException(exception), containsString("infiniteLoop")); // Make sure we have the stalled frame on the stack somewhere
=====================================================================
Found a 11 line (41 tokens) duplication in the following files: 
Starting at line 179 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\AllMembersSupplier.java
Starting at line 190 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\AllMembersSupplier.java

        List<FrameworkField> fields = clazz.getAnnotatedFields(DataPoint.class);
        Collection<Field> validFields = new ArrayList<Field>();

        for (FrameworkField frameworkField : fields) {
            validFields.add(frameworkField.getField());
        }

        return validFields;
    }
    
    protected Collection<Field> getDataPointsFields(ParameterSignature sig) {
=====================================================================
Found a 3 line (41 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\matchers\TypeSafeMatcher.java
Starting at line 41 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\internal\ReflectiveTypeFinder.java

    private static Class<?> findExpectedType(Class<?> fromClass) {
        for (Class<?> c = fromClass; c != Object.class; c = c.getSuperclass()) {
            for (Method method : MethodSorter.getDeclaredMethods(c)) {
=====================================================================
Found a 8 line (41 tokens) duplication in the following files: 
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\AllTests.java
Starting at line 9 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\AllTests.java

public class AllTests {

    public static void main(String[] args) {
        junit.textui.TestRunner.run(suite());
    }

    public static Test suite() {
        TestSuite suite = new TestSuite("All JUnit Tests");
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagSimpleAdd() {
        // {[12 CHF][7 USD]} + [14 CHF] == {[26 CHF][7 USD]}
        IMoney expected = MoneyBag.create(new Money(26, "CHF"), new Money(7, "USD"));
        assertEquals(expected, fMB1.add(f14CHF));
    }
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 69 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagSumAdd() {
        // {[12 CHF][7 USD]} + {[14 CHF][21 USD]} == {[26 CHF][28 USD]}
        IMoney expected = MoneyBag.create(new Money(26, "CHF"), new Money(28, "USD"));
        assertEquals(expected, fMB1.add(fMB2));
    }
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 132 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testMoneyHash() {
        assertTrue(!f12CHF.equals(null));
        Money equal = new Money(12, "CHF");
        assertEquals(f12CHF.hashCode(), equal.hashCode());
    }
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 143 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 179 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testSimpleBagAdd() {
        // [14 CHF] + {[12 CHF][7 USD]} == {[26 CHF][7 USD]}
        IMoney expected = MoneyBag.create(new Money(26, "CHF"), new Money(7, "USD"));
        assertEquals(expected, f14CHF.add(fMB1));
    }
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 185 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java
Starting at line 199 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java

    void verifyError(TestCase test) {
        TestResult result = test.run();
        assertTrue(result.runCount() == 1);
        assertTrue(result.failureCount() == 0);
        assertTrue(result.errorCount() == 1);
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 80 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

        assertThat("unexpected run count", testResult.getRunCount(), is(equalTo(2)));
        assertThat("unexpected failure count", testResult.getFailureCount(), is(equalTo(0)));
        assertThat("unexpected failure count", testResult.getIgnoreCount(), is(equalTo(0)));
    }

    @RunWith(Categories.class)
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java

        Runner runner = builder.runnerForClass(OuterClass.InnerClassWithoutOwnRunWith.class);
        assertThat(runner, is(instanceOf(RunnerSpy.class)));

        RunnerSpy runnerSpy = (RunnerSpy) runner;
        assertThat(runnerSpy.getInvokedTestClass(), is((Object) OuterClass.InnerClassWithoutOwnRunWith.class));
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java

        Runner runner = builder.runnerForClass(OuterClass.InnerClassWithOwnRunWith.class);
        assertThat(runner, is(instanceOf(InnerRunner.class)));

        RunnerSpy runnerSpy = (RunnerSpy) runner;
        assertThat(runnerSpy.getInvokedTestClass(), is((Object) OuterClass.InnerClassWithOwnRunWith.class));
=====================================================================
Found a 15 line (41 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java

        public static Counter counter = new Counter();

        @Test
        public void firstTest() {
            assertEquals(1, counter.count);
        }

        @Test
        public void secondTest() {
            assertEquals(1, counter.count);
        }
    }

    @Test
    public void ruleIsAppliedOnce() {
=====================================================================
Found a 9 line (41 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 205 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 224 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckCallableThatThrowsAnException {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkSucceeds(new Callable<Object>() {
                public Object call() throws Exception {
                    throw new RuntimeException("first!");
=====================================================================
Found a 17 line (41 tokens) duplication in the following files: 
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 187 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

                watchedLog += method.getName() + " " + "success!\n";
            }
        };

        @Test
        public void fails() {
            fail();
        }

        @Test
        public void succeeds() {
        }
    }

    @Test
    public void succeeded() {
        WatchmanTest.watchedLog = "";
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

                EXCLUDES_DUMMY_CATEGORY_1,
                DummyTestClass.class.getName(),
                DummyTestClass0.class.getName(),
                DummyTestClass1.class.getName(),
                DummyTestClass01.class.getName(),
                DummyTestClass0TestMethod1.class.getName());
=====================================================================
Found a 6 line (41 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 100 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

        assertWasRun(DummyTestClass.class);
        assertWasRun(DummyTestClass0.class);
        assertWasNotRun(DummyTestClass1.class);
        assertWasNotRun(DummyTestClass01.class);
        assertWasNotRun(DummyTestClass0TestMethod1.class);
        assertThat("runCount does not match", result.getRunCount(), is(2));
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java

        Description description = Description.createTestDescription(Description.class, "aTestMethod");

        assertThat(description.getClassName(), equalTo("org.junit.runner.Description"));
        assertThat(description.getMethodName(), equalTo("aTestMethod"));
        assertThat(description.getAnnotations().size(), equalTo(0));
=====================================================================
Found a 17 line (41 tokens) duplication in the following files: 
Starting at line 179 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 211 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        @Parameter(2)
        public int fInput;

        public int fExpected;

        @Test
        public void test() {
            assertEquals(fExpected, fib(fInput));
        }

        private int fib(int x) {
            return 0;
        }
    }

    @Test
    public void failureOnInitialization() {
=====================================================================
Found a 12 line (41 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 78 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 94 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 111 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        matchers.add(second);
        return anyOf(matchers);
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second, Matcher<? super T> third) {
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\textui\ResultPrinter.java
Starting at line 84 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\TextListener.java

            getWriter().println(" (" + result.runCount() + " test" + (result.runCount() == 1 ? "" : "s") + ")");

        } else {
            getWriter().println();
            getWriter().println("FAILURES!!!");
            getWriter().println("Tests run: " + result.runCount() +
=====================================================================
Found a 15 line (40 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\InitializationError.java
Starting at line 11 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\InitializationError.java

public class InitializationError extends Exception {
    private static final long serialVersionUID = 1L;

    /*
     * We have to use the f prefix until the next major release to ensure
     * serialization compatibility. 
     * See https://github.com/junit-team/junit4/issues/976
     */
    private final List<Throwable> fErrors;

    public InitializationError(List<Throwable> errors) {
        this.fErrors = errors;
    }

    public InitializationError(Throwable... errors) {
=====================================================================
Found a 11 line (40 tokens) duplication in the following files: 
Starting at line 50 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 67 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java

        TestSuite suite = new TestSuite();
        suite.addTest(new TestCase() {
            @Override
            public void runTest() {
            }
        });
        runner.doRun(suite);
        assertEquals(expected, output.toString());
    }

    public void testTwoTests() {
=====================================================================
Found a 8 line (40 tokens) duplication in the following files: 
Starting at line 268 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 282 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 296 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckRunnableThatThrowsExpectedTypeOfException {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkThrows(IllegalArgumentException.class, new ThrowingRunnable() {
                public void run() throws Throwable {
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 94 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

                DummyTestClass.class.getName(),
                DummyTestClass0.class.getName(),
                DummyTestClass1.class.getName(),
                DummyTestClass01.class.getName(),
                DummyTestClass0TestMethod1.class.getName());
=====================================================================
Found a 2 line (40 tokens) duplication in the following files: 
Starting at line 237 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 245 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

                new Object[][]{{true, true}, {false, false}},
                new Object[][]{{true, true}, {true, false}},
=====================================================================
Found a 15 line (40 tokens) duplication in the following files: 
Starting at line 494 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 569 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        public TestRule rule() {
            return new ExternalResource() {
                @Override
                protected void before() throws Throwable {
                    log += "sub.rule().before() ";
                }

                @Override
                protected void after() {
                    log += "sub.rule().after() ";
                }
            };
        }

        @Override
=====================================================================
Found a 4 line (40 tokens) duplication in the following files: 
Starting at line 111 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 243 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        Result result = core.run(InfiniteLoopTest.class);
        assertEquals(1, result.getRunCount());
        assertEquals(1, result.getFailureCount());
        Throwable exception = result.getFailures().get(0).getException();
=====================================================================
Found a 10 line (40 tokens) duplication in the following files: 
Starting at line 23 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AllOf.<T>allOf(matchers);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second) {
=====================================================================
Found a 10 line (40 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AnyOf.<T>anyOf(matchers);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.core.AnyOf<T> anyOf(org.hamcrest.Matcher<T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third) {
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 521 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 530 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        CategoryFilter exclude = CategoryFilter.categoryFilter(true, null, true, exclusions);
        Request baseRequest= Request.aClass(OneOfEach.class);
        Result result= new JUnitCore().run(baseRequest.filterWith(exclude));
        assertTrue(result.wasSuccessful());
        assertEquals(1, result.getRunCount());
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 34 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java

        Runner runner = builder.runnerForClass(OuterClass.class);
        assertThat(runner, is(instanceOf(RunnerSpy.class)));

        RunnerSpy runnerSpy = (RunnerSpy) runner;
        assertThat(runnerSpy.getInvokedTestClass(), is((Object) OuterClass.class));
=====================================================================
Found a 13 line (39 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 160 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 198 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java

        @Test
        public void firstTest() {
            assertEquals(1, counter.count);
        }

        @Test
        public void secondTest() {
            assertEquals(1, counter.count);
        }
    }

    @Test
    public void ruleIsAppliedOnce() {
=====================================================================
Found a 9 line (39 tokens) duplication in the following files: 
Starting at line 101 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java

    public void runTestClassAndVerifyEvents() {
        EventCollector collector = new EventCollector();
        JUnitCore core = new JUnitCore();
        core.addListener(collector);
        core.run(classUnderTest);
        assertThat(collector, matcher);
    }

    public static class AddSingleError {
=====================================================================
Found a 8 line (39 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 205 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 224 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 238 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckCallableThatThrowsAnException {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkSucceeds(new Callable<Object>() {
                public Object call() throws Exception {
=====================================================================
Found a 13 line (39 tokens) duplication in the following files: 
Starting at line 15 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatchmanTest.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatchmanTest.java

    public static class ViolatedAssumptionTest {
        static StringBuilder log;

        @BeforeClass
        public static void initLog() {
            log = new StringBuilder();
        }

        @Rule
        public LoggingTestWatchman watchman = new LoggingTestWatchman(log);

        @Test
        public void succeeds() {
=====================================================================
Found a 4 line (39 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\AssumptionTest.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\AssumptionTest.java

        Result result = JUnitCore.runClasses(HasFailingAssumption.class);
        assertThat(result.getRunCount(), is(1));
        assertThat(result.getIgnoreCount(), is(0));
        assertThat(result.getFailureCount(), is(0));
=====================================================================
Found a 2 line (39 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 146 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 592 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

            return Arrays.asList(new Object[][] { { 0, 0, 0 }, { 1, 1, 2 },
                    { 3, 2, 5 }, { 4, 3, 7 } });
=====================================================================
Found a 4 line (39 tokens) duplication in the following files: 
Starting at line 449 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 482 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        Result result = JUnitCore.runClasses(BeforeParamAndAfterParamError.class);
        assertEquals(1, result.getFailureCount());
        List<Failure> failures = result.getFailures();
        assertThat(failures.get(0).getMessage(), containsString("beforeParam() should be static"));
=====================================================================
Found a 13 line (39 tokens) duplication in the following files: 
Starting at line 465 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 551 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        public TestRule rule() {
            return new ExternalResource() {
                @Override
                protected void before() throws Throwable {
                    log += "super.rule().before() ";
                }

                @Override
                protected void after() {
                    log += "super.rule().after() ";
                }
            };
        }
=====================================================================
Found a 14 line (39 tokens) duplication in the following files: 
Starting at line 602 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 649 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        public final TestRule rule = new ExternalResource() {
            @Override
            protected void before() throws Throwable {
                log += "super.rule.before() ";
            }

            @Override
            protected void after() {
                log += "super.rule.after() ";
            }
        };
    }

    static public class SubFieldShadowing extends SuperFieldShadowing {
=====================================================================
Found a 1 line (39 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth) {
=====================================================================
Found a 1 line (39 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
=====================================================================
Found a 16 line (38 tokens) duplication in the following files: 
Starting at line 8 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\ComparisonFailure.java
Starting at line 12 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\ComparisonFailure.java

public class ComparisonFailure extends AssertionFailedError {
    private static final int MAX_CONTEXT_LENGTH = 20;
    private static final long serialVersionUID = 1L;

    private String fExpected;
    private String fActual;

    /**
     * Constructs a comparison failure.
     *
     * @param message the identifying message or null
     * @param expected the expected string value
     * @param actual the actual string value
     */
    public ComparisonFailure(String message, String expected, String actual) {
        super(message);
=====================================================================
Found a 11 line (38 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java
Starting at line 47 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java

            String[] fieldNames = field.getAnnotation(DataPoint.class).value();
            if (Arrays.asList(fieldNames).contains(requestedName)) {
                fieldsWithMatchingNames.add(field);
            }
        }
        
        return fieldsWithMatchingNames;
    }
    
    @Override
    protected Collection<Field> getDataPointsFields(ParameterSignature sig) {
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagNotEquals() {
        IMoney bag = MoneyBag.create(f12CHF, f7USD);
        assertFalse(bag.equals(new Money(12, "DEM").add(f7USD)));
    }
=====================================================================
Found a 12 line (38 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ExtensionTest.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ExtensionTest.java

        TornDown wrapper = new TornDown(test) {
            @SuppressWarnings("deprecation")
            @Override
            public void setUp() {
                fail();
            }
        };

        TestResult result = new TestResult();
        wrapper.run(result);

        assertTrue(!wrapper.fTornDown);
=====================================================================
Found a 6 line (38 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

    }

    @RunWith(Categories.class)
    @Categories.IncludeCategory({A.class, B.class})
    @Categories.ExcludeCategory(C.class)
    @Suite.SuiteClasses({CategoriesTest.class})
=====================================================================
Found a 13 line (38 tokens) duplication in the following files: 
Starting at line 142 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 156 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

                log += method.getName() + " " + e.getClass().getSimpleName();
            }
        };

        @Test
        public void nothing() {
            fail();
        }
    }

    @Test
    public void onFailure() {
        log = "";
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithExtendedParameterSources.java
Starting at line 155 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithExtendedParameterSources.java

    public void getDataPointsFromArrayMethod() {
        DataPointArrayMethod.log = "";
        JUnitCore.runClasses(DataPointArrayMethod.class);
        assertThat(DataPointArrayMethod.log, is("AB"));
    }

    @RunWith(Theories.class)
    public static class DataPointMalformedArrayMethods {
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SingleMethodTest.java
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SingleMethodTest.java

    static public class ParameterizedOneTimeSetup {
        @Parameters
        public static List<Object[]> params() {
            return Arrays.asList(new Object[]{1}, new Object[]{2});
        }

        public ParameterizedOneTimeSetup(int x) {
=====================================================================
Found a 8 line (38 tokens) duplication in the following files: 
Starting at line 133 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(6);
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
        matchers.add(fifth);
        matchers.add(sixth);
        return allOf(matchers);
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\textui\ResultPrinter.java
Starting at line 80 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\TextListener.java

    protected void printFooter(TestResult result) {
        if (result.wasSuccessful()) {
            getWriter().println();
            getWriter().print("OK");
            getWriter().println(" (" + result.runCount() + " test" + (result.runCount() == 1 ? "" : "s") + ")");
=====================================================================
Found a 12 line (37 tokens) duplication in the following files: 
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\textui\ResultPrinter.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\TextListener.java

                    ",  Errors: " + result.errorCount());
        }
        getWriter().println();
    }

    /**
     * Returns the formatted string of the elapsed time.
     * Duplicated from BaseTestRunner. Fix it.
     */
    protected String elapsedTimeAsString(long runTime) {
        return NumberFormat.getInstance().format((double) runTime / 1000);
    }
=====================================================================
Found a 13 line (37 tokens) duplication in the following files: 
Starting at line 233 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 685 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public static Dummy both() {
            countOfMethodCalls++;
            return new Dummy();
        }

        @Test
        public void onlyOnce() {
            assertEquals(1, countOfMethodCalls);
        }
    }

    @Test
    public void testCallMethodOnlyOnceRule() {
=====================================================================
Found a 10 line (37 tokens) duplication in the following files: 
Starting at line 157 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TemporaryFolderUsageTest.java
Starting at line 169 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TemporaryFolderUsageTest.java

        tempFolder.newFolder("temp1", "temp2", "temp3/temp4");

        File directory = new File(tempFolder.getRoot(), "temp1");
        assertFileIsDirectory(directory);
        directory = new File(directory, "temp2/temp3/temp4");
        assertFileIsDirectory(directory);
    }

    @Test
    public void newFolderWithPathsContainingFileSeparatorCreatesFullPath()
=====================================================================
Found a 8 line (37 tokens) duplication in the following files: 
Starting at line 153 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 441 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public TestRule watcher = new TestWatcher() {
            @Override
            protected void failed(Throwable e, Description description) {
                log += description + " " + e.getClass().getSimpleName();
            }
        };

        @Test
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 235 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 344 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

        assertArrayEqualsFailure(
                "message",
                new Object[][]{{true, true}, {false, false}},
                new Object[][]{{true, true}, {true, false}},
=====================================================================
Found a 10 line (37 tokens) duplication in the following files: 
Starting at line 697 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 726 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

            assertThat("identifier", actual, equalTo(expected));
        } catch (AssertionError e) {
            assertEquals(expectedMessage, e.getMessage());
            return;
        }
        throw new AssertionError(ASSERTION_ERROR_EXPECTED);
    }

    @Test
    public void assertThatIncludesAdvancedMismatch() {
=====================================================================
Found a 7 line (37 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java
Starting at line 64 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java

        assertThat(description.getClassName(), equalTo("org.junit.runner.Description"));
        assertThat(description.getMethodName(), equalTo("aTestMethod"));
        assertThat(description.getAnnotations().size(), equalTo(0));
    }

    @Test
    public void parseClassAndMethodWithAnnotations() throws Exception {
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 198 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java
Starting at line 233 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java

        CountingRunListener countingRunListener = runTestWithParentRunner(AssumptionViolatedAtParentLevelTest.class);
        Assert.assertEquals(1, countingRunListener.testSuiteStarted);
        Assert.assertEquals(1, countingRunListener.testSuiteFinished);
        Assert.assertEquals(0, countingRunListener.testSuiteFailure);
        Assert.assertEquals(1, countingRunListener.testSuiteAssumptionFailure);
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>();
        matchers.add(first);
        matchers.add(second);
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\matchers\TypeSafeMatcher.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\TypeSafeMatcher.java

    @SuppressWarnings({"unchecked"})
    public final boolean matches(Object item) {
        return item != null
                && expectedType.isInstance(item)
                && matchesSafely((T) item);
    }
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\rules\Verifier.java
Starting at line 221 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 673 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

public abstract class Verifier implements TestRule {
    public Statement apply(final Statement base, Description description) {
        return new Statement() {
            @Override
            public void evaluate() throws Throwable {
                base.evaluate();
=====================================================================
Found a 12 line (36 tokens) duplication in the following files: 
Starting at line 350 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 13 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\SampleJUnit4Tests.java

        public void testAlwaysThrows() {
            new FakeClassUnderTest().throwsExceptionWithoutCause();
        }
    }

    public static class TestWithOneThrowingTestMethodWithCause {
        
        @Test
        public void alwaysThrows() {
            new FakeClassUnderTest().throwsExceptionWithCause();
        }
    }
=====================================================================
Found a 5 line (36 tokens) duplication in the following files: 
Starting at line 384 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 392 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

    public void arraysEqual() {
        Object element = new Object();
        Object[] objects1 = new Object[]{element};
        Object[] objects2 = new Object[]{element};
        assertArrayEquals(objects1, objects2);
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\MultipleFailureExceptionTest.java
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\MultipleFailureExceptionTest.java

        errors.add(new ExpectedException("basil"));
        errors.add(new RuntimeException("garlic"));

        try {
            MultipleFailureException.assertEmpty(errors);
            fail();
        } catch (MultipleFailureException expected) {
            assertThat(expected.getFailures(), equalTo(errors));
=====================================================================
Found a 14 line (36 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SingleMethodTest.java
Starting at line 268 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

    static public class OneTimeSetup {
        @BeforeClass
        public static void once() {
            count++;
        }

        @Test
        public void one() {
        }

        @Test
        public void two() {
        }
    }
=====================================================================
Found a 9 line (36 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerFilteringTest.java
Starting at line 119 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerFilteringTest.java

        Runner runner = Request.aClass(ExampleSuite.class).getRunner();
        Filter filter = notThisMethodName("test1");
        try {
            filter.apply(runner);
        } catch (NoTestsRemainException e) {
            return;
        }
        fail("Expected 'NoTestsRemainException' due to complete filtering");
    }
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third) {
    return org.hamcrest.core.AllOf.<T>allOf(first, second, third);
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\Assert.java
Starting at line 138 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\Assert.java

        if (Double.compare(expected, actual) == 0) {
            return;
        }
        if (!(Math.abs(expected - actual) <= delta)) {
            failNotEquals(message, new Double(expected), new Double(actual));
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 95 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

        Result testResult= JUnitCore.runClasses(InheritanceAll.class);
        assertThat("unexpected run count", testResult.getRunCount(), is(equalTo(1)));
        assertThat("unexpected failure count", testResult.getFailureCount(), is(equalTo(0)));
=====================================================================
Found a 5 line (35 tokens) duplication in the following files: 
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 124 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

    public static final class InheritanceAny {}

    @RunWith(Categories.class)
    @Categories.IncludeCategory(value= {A.class, B.class}, matchAny= false)
    @Categories.ExcludeCategory(C.class)
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\EventCollector.java
Starting at line 57 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\EventCollector.java

                return item.fFailures.size() == numberOfFailures;
            }

            public void describeTo(org.hamcrest.Description description) {
                description.appendText("has ");
                description.appendValue(numberOfFailures);
                description.appendText(" failures");
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 244 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 356 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

        assertArrayEqualsFailure(
                new Object[][]{{true, true}, {false, false}},
                new Object[][]{{true, true}, {true, false}},
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelClassTest.java
Starting at line 47 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelClassTest.java
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelMethodTest.java

            fExample1One = Thread.currentThread();
        }

        @Test
        public void two() throws InterruptedException {
            fSynchronizer.countDown();
            assertTrue(fSynchronizer.await(TIMEOUT, TimeUnit.SECONDS));
=====================================================================
Found a 2 line (35 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second) {
        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(2);
=====================================================================
Found a 1 line (35 tokens) duplication in the following files: 
Starting at line 115 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth) {
=====================================================================
Found a 1 line (35 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth, Matcher<? super T> sixth) {
=====================================================================
Found a 9 line (34 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java

        @Test
        public void testSomething() {
            Assert.assertTrue(true);
        }
    }

    @RunWith(Categories.class)
    @IncludeCategory(Token.class)
    @SuiteClasses({ TestThatAvoidsNoTestRemainsException.class,
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 383 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java

    private static class TestMethodRule implements MethodRule {

        public Statement apply(final Statement base, FrameworkMethod method, Object target) {
            return new Statement() {
                @Override
                public void evaluate() throws Throwable {
=====================================================================
Found a 15 line (34 tokens) duplication in the following files: 
Starting at line 117 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 130 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        assertThat(testResult(MultipleRuleTest.class), isSuccessful());
        assertEquals(2, runCount);
    }

    public static class NoRulesTest {
        public int x;

        @Test
        public void nothing() {

        }
    }

    @Test
    public void ignoreNonRules() {
=====================================================================
Found a 8 line (34 tokens) duplication in the following files: 
Starting at line 117 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TemporaryFolderUsageTest.java
Starting at line 127 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TemporaryFolderUsageTest.java

        tempFolder.newFolder("temp1" + File.separator + "temp2");
        File temp1 = new File(tempFolder.getRoot(), "temp1");
        assertFileIsDirectory(temp1);
        assertFileIsDirectory(new File(temp1, "temp2"));
    }
 
    @Test
    public void newFolderWithPathContainingForwardSlashCreatesDirectories()
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java
Starting at line 135 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java
Starting at line 158 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java

        PrintableResult result = testResult(TestWatcherSkippedThrowsExceptionTest.class);
        assertThat(result, failureCountIs(2));
        assertThat(result, hasFailureContaining("test failure"));
        assertThat(result, hasFailureContaining("watcher failure"));
    }

    public static class FailingTest {
=====================================================================
Found a 2 line (34 tokens) duplication in the following files: 
Starting at line 237 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 356 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

                new Object[][]{{true, true}, {false, false}},
                new Object[][]{{true, true}, {true, false}},
=====================================================================
Found a 2 line (34 tokens) duplication in the following files: 
Starting at line 245 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 344 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

                new Object[][]{{true, true}, {false, false}},
                new Object[][]{{true, true}, {true, false}},
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 255 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 302 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

                new Object[][]{{}},
                "not equal: array lengths differed, expected.length=1 actual.length=0; arrays first differed at element [0][0]; expected:<true> but was:<end of array>");
        assertArrayEqualsFailure(
                "not equal",
                new Object[][]{{}, {true}},
                new Object[][]{{}},
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 264 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 311 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

                new Object[][]{{}},
                new Object[][]{{true}, {}},
                "not equal: array lengths differed, expected.length=0 actual.length=1; arrays first differed at element [0][0]; expected:<end of array> but was:<true>");
        assertArrayEqualsFailure(
                "not equal",
                new Object[][]{{}},
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 255 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\categories\Categories.java
Starting at line 268 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\categories\Categories.java

        private boolean matchesAnyParentCategories(Set<Class<?>> childCategories, Set<Class<?>> parentCategories) {
            for (Class<?> parentCategory : parentCategories) {
                if (hasAssignableTo(childCategories, parentCategory)) {
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 64 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\SpecificDataPointsSupplier.java

            String[] methodNames = method.getAnnotation(DataPoint.class).value();
            if (Arrays.asList(methodNames).contains(requestedName)) {
                methodsWithMatchingNames.add(method);
            }
        }
        
        return methodsWithMatchingNames;
    }
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\Throwables.java
Starting at line 156 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\Throwables.java

    public static String getStacktrace(Throwable exception) {
        StringWriter stringWriter = new StringWriter();
        PrintWriter writer = new PrintWriter(stringWriter);
        exception.printStackTrace(writer);
        return stringWriter.toString();
    }
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 219 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java

    private static final class MemberMustBeStatic implements RuleValidator {
        public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {
            if (!member.isStatic()) {
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 226 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java
Starting at line 260 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java

    public <T> List<T> getAnnotatedFieldValues(Object test,
            Class<? extends Annotation> annotationClass, Class<T> valueClass) {
        final List<T> results = new ArrayList<T>();
=====================================================================
Found a 11 line (33 tokens) duplication in the following files: 
Starting at line 49 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 226 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

    public static class OneOfEach {

        @Category(FastTests.class)
        @Test
        public void a() {
        }

        @Category(SlowTests.class)
        @Test
        public void b() {
        }
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 183 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 192 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        CategoryFilter include = CategoryFilter.include(SlowTests.class);
        Request baseRequest = Request.aClass(TestSuiteWithNoCategories.class);
        Result result = new JUnitCore().run(baseRequest.filterWith(include));
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java
Starting at line 117 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\MethodSorterTest.java

    public void testMethodsNullSorterSelf() {
        List<String> expected = Arrays.asList(EPSILON, BETA, ALPHA, DELTA, GAMMA_VOID, GAMMA_BOOLEAN);
        List<String> actual = getDeclaredMethodNames(DummySortWithoutAnnotation.class);
=====================================================================
Found a 9 line (33 tokens) duplication in the following files: 
Starting at line 343 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java
Starting at line 356 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java

    public static class UseCustomMessageWithPlaceHolder {

        @Rule
        public ExpectedException thrown = ExpectedException.none();

        @Test
        public void noThrow() {
            thrown.expect(IllegalArgumentException.class);
            thrown.reportMissingExceptionWithMessage(ARBITRARY_MESSAGE
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkFieldTest.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkMethodTest.java

        Annotation annotation = frameworkField.getAnnotation(Rule.class);
        assertTrue(Rule.class.isAssignableFrom(annotation.getClass()));
    }

    @Test
    public void missingAnnotationIsNotAvailable() throws Exception {
=====================================================================
Found a 12 line (33 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithParameterSupplier.java
Starting at line 114 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithParameterSupplier.java

        public SupplierWithUnknownConstructor(String param) {
        }

        @Override
        public List<PotentialAssignment> getValueSources(ParameterSignature sig) {
            return null;
        }

    }

    @RunWith(Theories.class)
    public static class TestClassUsingSupplierWithUnknownConstructor {
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 196 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 449 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 482 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        Result result = JUnitCore.runClasses(BadIndexForAnnotatedFieldTest.class);
        assertEquals(1, result.getFailureCount());
        List<Failure> failures = result.getFailures();
        assertThat(failures.get(0).getException().getMessage(), allOf(
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\Assert.java
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\Assert.java

    static public void assertEquals(String message, Object expected, Object actual) {
        if (expected == null && actual == null) {
            return;
        }
        if (expected != null && expected.equals(actual)) {
            return;
        }
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\textui\ResultPrinter.java
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\TextListener.java

    }

    /* Internal methods */

    protected void printHeader(long runTime) {
        getWriter().println();
        getWriter().println("Time: " + elapsedTimeAsString(runTime));
    }

    protected void printErrors(TestResult result) {
=====================================================================
Found a 12 line (32 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\management\ReflectiveRuntimeMXBean.java
Starting at line 77 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\management\ReflectiveThreadMXBean.java

        return (List<String>) Holder.getInputArgumentsMethod.invoke(runtimeMxBean);
      } catch (ClassCastException e) { // no multi-catch with source level 6
        // fallthrough
      } catch (IllegalAccessException e) {
        // fallthrough
      } catch (IllegalArgumentException e) {
        // fallthrough
      } catch (InvocationTargetException e) {
        // fallthrough
      }
    }
    return Collections.emptyList();
=====================================================================
Found a 11 line (32 tokens) duplication in the following files: 
Starting at line 27 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\InitializationError.java
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\InitializationError.java

        this(Arrays.asList(errors));
    }

    public InitializationError(String string) {
        this(new Exception(string));
    }

    public List<Throwable> getCauses() {
        return fErrors;
    }
}
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\TestClass.java
Starting at line 166 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java

    private boolean runsTopToBottom(Class<? extends Annotation> annotation) {
        return annotation.equals(Before.class) || annotation.equals(BeforeClass.class);
    }

    private boolean isShadowed(Method method, List<Method> results) {
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\rules\TestWatcher.java
Starting at line 26 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\parent\TestWithClassRule.java

public abstract class TestWatcher implements TestRule {
    public Statement apply(final Statement base, final Description description) {
        return new Statement() {
            @Override
            public void evaluate() throws Throwable {
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 126 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java
Starting at line 160 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testNormalize3() {
        // {[12 CHF][7 USD]} - {[12 CHF][3 USD]} == [4 USD]
        IMoney ms1 = MoneyBag.create(new Money(12, "CHF"), new Money(3, "USD"));
        Money expected = new Money(4, "USD");
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java
Starting at line 200 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java

        t.run(result);
        assertTrue(result.runCount() == 1);
        assertTrue(result.failureCount() == 0);
        assertTrue(result.errorCount() == 0);
    }
=====================================================================
Found a 14 line (32 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 17 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java

    static class TestResultPrinter extends ResultPrinter {
        TestResultPrinter(PrintStream writer) {
            super(writer);
        }

        /* Spoof printing time so the tests are deterministic
           */
        @Override
        protected String elapsedTimeAsString(long runTime) {
            return "0";
        }
    }

    public static void main(String[] args) {
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityPrintingTest.java

                getWriter().println("Failures here");
            }
        };
        runner.setPrinter(printer);
        TestSuite suite = new TestSuite();
        suite.addTest(new TestCase() {
            @Override
            public void runTest() {
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 65 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 95 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java

    public static class ParameterizedTestWithoutCategory {
        @Parameters
        public static Iterable<String> getParameters() {
            return Arrays.asList("first", "second");
        }

        @Parameterized.Parameter
        public String value;

        @Test
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 183 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 201 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        CategoryFilter include = CategoryFilter.include(SlowTests.class);
        Request baseRequest = Request.aClass(TestSuiteWithNoCategories.class);
        Result result = new JUnitCore().run(baseRequest.filterWith(include));
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\DisableOnDebugTest.java
Starting at line 143 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\DisableOnDebugTest.java
Starting at line 151 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\DisableOnDebugTest.java

        Result result = core.run(PreJava5DebugArgumentsTest.class);
        assertEquals("Should run the test", 1, result.getRunCount());
        assertEquals("Test should not have failed", 0, result.getFailureCount());
    }

    @Test
    public void whenRunWithPreJava5DebugArgumentsInReverseOrderTestShouldFail() {
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 308 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 383 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java

    private static class Increment implements MethodRule {
        public Statement apply(final Statement base,
                FrameworkMethod method, Object target) {
            return new Statement() {
                @Override
                public void evaluate() throws Throwable {
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 708 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 751 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public final TestRule a = new LoggingTestRule(ruleLog, "testRule");

        @Test
        public void foo() {
            ruleLog.append(" foo");
        }
    }

    @Test
    public void testRuleIsAroundMethodRule() {
=====================================================================
Found a 13 line (32 tokens) duplication in the following files: 
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java
Starting at line 145 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java

            protected void failed(Throwable e, Description description) {
                throw new RuntimeException("watcher failure");
            }
        };

        @Test
        public void fails() {
            throw new IllegalArgumentException("test failure");
        }
    }

    @Test
    public void testWatcherFailedThrowsException() {
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\ConcurrentRunNotifierTest.java
Starting at line 118 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java

    private static class ConcurrentRunListener extends RunListener {
        final AtomicInteger fTestStarted = new AtomicInteger(0);

        @Override
        public void testStarted(Description description) throws Exception {
            fTestStarted.incrementAndGet();
        }
    }

    @Test
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 697 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 710 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 726 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

            assertThat("identifier", actual, equalTo(expected));
        } catch (AssertionError e) {
            assertEquals(expectedMessage, e.getMessage());
            return;
        }
        throw new AssertionError(ASSERTION_ERROR_EXPECTED);
    }

    @Test
    public void assertThatIncludesAdvancedMismatch() {
=====================================================================
Found a 12 line (32 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 101 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 121 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java

        @DataPoint(ignoredExceptions=Throwable.class)
        public static int failingDataPoint() {
            throw new RuntimeException();
        }

        @Theory
        public void theory(int x) {
        }
    }
    
    @Test
    public void shouldIgnoreSingleDataPointMethodExceptionsOnRequest() {
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 777 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 837 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        Result result = core.run(RunAllAftersRegardless.class);
        assertTrue(log.contains("one"));
        assertTrue(log.contains("two"));
        assertEquals(2, result.getFailureCount());
    }
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(5);
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
        matchers.add(fifth);
        return allOf(matchers);
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 284 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\Assert.java
Starting at line 768 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java

    static public void assertSame(String message, Object expected, Object actual) {
        if (expected == actual) {
            return;
        }
        failNotSame(message, expected, actual);
    }
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\AllMembersSupplier.java
Starting at line 145 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\internal\AllMembersSupplier.java

            Object value = Array.get(array, i);
            if (sig.canAcceptValue(value)) {
                list.add(PotentialAssignment.forValue(name + "[" + i + "]", value));
            }
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 191 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 203 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 219 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 231 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 244 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 256 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 269 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java

    private static final class MemberMustBeStatic implements RuleValidator {
        public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {
            if (!member.isStatic()) {
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\rules\Verifier.java
Starting at line 221 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 386 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 673 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

public abstract class Verifier implements TestRule {
    public Statement apply(final Statement base, Description description) {
        return new Statement() {
            @Override
            public void evaluate() throws Throwable {
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 185 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java
Starting at line 192 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java
Starting at line 199 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java

    void verifyError(TestCase test) {
        TestResult result = test.run();
        assertTrue(result.runCount() == 1);
        assertTrue(result.failureCount() == 0);
=====================================================================
Found a 7 line (31 tokens) duplication in the following files: 
Starting at line 49 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java

        String expected = expected(new String[]{".", "Time: 0", "", "OK (1 test)", ""});
        TestSuite suite = new TestSuite();
        suite.addTest(new TestCase() {
            @Override
            public void runTest() {
            }
        });
=====================================================================
Found a 10 line (31 tokens) duplication in the following files: 
Starting at line 251 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 311 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        @Category(FastTests.class)
        @Test
        public void a() {

        }
    }

    @RunWith(Categories.class)
    @IncludeCategory(SlowTests.class)
    @SuiteClasses({OneFast.class})
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java

            createdFiles[0] = (File) method.invoke(folder, subfolder);
            new File(createdFiles[0], filename).createNewFile();

            File expectedFile = new File(folder.getRoot(), join(subfolder, filename));
=====================================================================
Found a 8 line (31 tokens) duplication in the following files: 
Starting at line 161 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java
Starting at line 171 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java

        File file = folder.newFile("a");
        folder.delete();
        assertFalse(file.exists());
        assertFalse(folder.getRoot().exists());
    }

    @Test
    public void recursiveDeleteFolderWithOneRandomElement() throws IOException {
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 260 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TemporaryFolderUsageTest.java
Starting at line 266 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TemporaryFolderUsageTest.java

    private void checkFileExists(String msg, File file, boolean exists) {
        assertThat("File is null", file, is(notNullValue()));
        assertThat("File '" + file.getAbsolutePath() + "' " + msg,
                file.exists(), is(exists));
=====================================================================
Found a 8 line (31 tokens) duplication in the following files: 
Starting at line 17 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkFieldTest.java
Starting at line 17 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkMethodTest.java

public class FrameworkFieldTest {
    @Rule
    public final ExpectedException thrown = none();

    @Test
    public void cannotBeCreatedWithoutUnderlyingField() {
        thrown.expect(NullPointerException.class);
        thrown.expectMessage("FrameworkField cannot be created without an underlying field.");
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkFieldTest.java
Starting at line 44 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkFieldTest.java

    public void presentAnnotationIsAvailable() throws Exception {
        Field field = ClassWithDummyField.class.getField("annotatedField");
        FrameworkField frameworkField = new FrameworkField(field);
        Annotation annotation = frameworkField.getAnnotation(Rule.class);
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkMethodTest.java
Starting at line 44 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\model\FrameworkMethodTest.java

    public void presentAnnotationIsAvailable() throws Exception {
        Method method = ClassWithDummyMethod.class.getMethod("annotatedDummyMethod");
        FrameworkMethod frameworkMethod = new FrameworkMethod(method);
        Annotation annotation = frameworkMethod.getAnnotation(Rule.class);
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 251 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 298 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

    public void twoDimensionalArraysDifferentOuterLengthNotEqual() {
        assertArrayEqualsFailure(
                "not equal",
                new Object[][]{{true}, {}},
                new Object[][]{{}},
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 76 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java

        Request one = Request.method(TwoTests.class, "succeed");
        fMax.run(one);
        Request two = Request.aClass(TwoTests.class);
        List<Description> things = fMax.sortedLeavesForTest(two);
        Description dontSucceed = Description.createTestDescription(
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 114 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java

    public void shouldReturnOnlyTheNamedDataPoints() throws Throwable {
        SpecificDataPointsSupplier supplier = new SpecificDataPointsSupplier(new TestClass(TestClassWithNamedDataPoints.class));

        List<PotentialAssignment> assignments = supplier.getValueSources(signature("methodWantingAllNamedStrings"));
=====================================================================
Found a 12 line (31 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithParameterSupplier.java
Starting at line 114 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithParameterSupplier.java
Starting at line 141 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithParameterSupplier.java

        public SupplierWithUnknownConstructor(String param) {
        }

        @Override
        public List<PotentialAssignment> getValueSources(ParameterSignature sig) {
            return null;
        }

    }

    @RunWith(Theories.class)
    public static class TestClassUsingSupplierWithUnknownConstructor {
=====================================================================
Found a 14 line (31 tokens) duplication in the following files: 
Starting at line 270 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 292 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        public static void once() {
            count++;
        }

        @Test
        public void one() {
        }

        @Test
        public void two() {
        }
    }

    public void testOneTimeSetup() throws Exception {
=====================================================================
Found a 11 line (31 tokens) duplication in the following files: 
Starting at line 139 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\ParameterizedTestMethodTest.java
Starting at line 142 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TestMethodTest.java

    static public class SuperWrong {
        @Test
        void notPublic() {
        }
    }

    static public class SubWrong extends SuperWrong {
        @Test
        public void justFine() {
        }
    }
=====================================================================
Found a 10 line (31 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AllOf.<T>allOf(first, second, third, fourth, fifth, sixth);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.core.AnyOf<T> anyOf(java.lang.Iterable<org.hamcrest.Matcher<? super T>> matchers) {
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 133 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(5);
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
        matchers.add(fifth);
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\ClassRoadie.java
Starting at line 150 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\MethodRoadie.java

                after.invoke(null);
            } catch (InvocationTargetException e) {
                addFailure(e.getTargetException());
            } catch (Throwable e) {
                addFailure(e); // Untested, but seems impossible
            }
        }
    }
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\TestMethod.java
Starting at line 441 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\BlockJUnit4ClassRunner.java

        if (annotation == null || annotation.expected() == None.class) {
            return null;
        } else {
            return annotation.expected();
        }
    }
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java

            classRuleValidatorBuilder()
            .withValidator(new DeclaringClassMustBePublic())
            .withValidator(new MemberMustBeStatic())
            .withValidator(new MemberMustBePublic())
            .withValidator(new FieldMustBeATestRule())
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 143 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java
Starting at line 179 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testBagSimpleAdd() {
        // {[12 CHF][7 USD]} + [14 CHF] == {[26 CHF][7 USD]}
        IMoney expected = MoneyBag.create(new Money(26, "CHF"), new Money(7, "USD"));
        assertEquals(expected, fMB1.add(f14CHF));
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 24 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java

        assertEquals(100, result.runCount());
        assertEquals(0, result.failureCount());
        assertEquals(0, result.errorCount());
    }

    public void testActiveRepeatedTest() {
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java
Starting at line 75 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java

                      testObject, containsString("test matcher"));
      assertThat(e.getCause(), is(testObject));
    }

    @Test
    @SuppressWarnings("deprecation")
    public void canSetCauseWithInstanceCreatedWithAssumptionObjectAndMatcher() {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java

    public void canSetCauseWithInstanceCreatedWithAssumptionObjectAndMatcher() {
      Throwable testObject = new Exception();
      org.junit.internal.AssumptionViolatedException e
              = new org.junit.internal.AssumptionViolatedException(
                      "sample assumption", testObject, containsString("test matcher"));
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 160 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 180 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckMatcherThatFailsWithoutProvidedReason {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkThat(3, is(4));
=====================================================================
Found a 14 line (30 tokens) duplication in the following files: 
Starting at line 384 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 674 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

            public Statement apply(final Statement base, FrameworkMethod method, Object target) {
                return new Statement() {
                    
                    @Override
                    public void evaluate() throws Throwable {
                        base.evaluate();
                    }
                };
            }
        }
       
        
        @Rule
        public MethodRule methodRule() {
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 174 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java
Starting at line 185 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java
Starting at line 196 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java

        assertThat(record.status, is(TestStatus.SUCCEEDED));
        assertTrue("timeSpent > 0", record.duration > 0);
        assertThat(record.duration, is(finishedRecord.duration));
    }

    @Test
    public void failed() {
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 323 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 333 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

            assertArrayEquals(expecteds, actuals);
        } catch (ArrayComparisonFailure e) {
            assertEquals(expectedMessage, e.getMessage());
            return;
        }
        throw new AssertionError(ASSERTION_ERROR_EXPECTED);
    }
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 916 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 931 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 948 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 966 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

            assertEquals("unexpected exception type thrown; expected:<java.io.IOException> but was:<java.lang.NullPointerException>",
                    error.getMessage());
            assertSame(npe, error.getCause());
            return;
        }
        throw new AssertionError(ASSERTION_ERROR_EXPECTED);
    }

    @Test
    public void assertThrowsSuppliesTheSpecifiedMessageUponTypeMismatch() {
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java

    public void shouldFailFromExceptionsInSingleDataPointMethods() {
        assertThat(testResult(HasWronglyIgnoredFailingSingleDataPointMethod.class), not(isSuccessful()));
    }
    
    @RunWith(Theories.class)
    public static class HasFailingDataPointArrayMethod {
=====================================================================
Found a 9 line (30 tokens) duplication in the following files: 
Starting at line 108 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithExtendedParameterSources.java
Starting at line 130 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithExtendedParameterSources.java

    public static class DataPointArrayMethod {
        public static String log = "";

        @DataPoints
        public static String[] STRINGS() {
            return new String[]{"A", "B"};
        }

        @Theory
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithUnresolvedGenericTypeVariablesOnTheoryParms.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithUnresolvedGenericTypeVariablesOnTheoryParms.java

    public static class TypeVariableOnTheoryOnly {
        @DataPoint
        public static List<String> strings = Arrays.asList("foo", "bar");

        @Theory
        public <T> void forItems(Collection<?> items) {
=====================================================================
Found a 11 line (30 tokens) duplication in the following files: 
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java

        return allOf(Arrays.asList(matchers));
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second) {
=====================================================================
Found a 2 line (30 tokens) duplication in the following files: 
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\IsCollectionContaining.java
Starting at line 117 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\IsCollectionContaining.java

    public static <T> Matcher<Iterable<T>> hasItems(Matcher<? super T>... itemMatchers) {
        List<Matcher<? super Iterable<T>>> all = new ArrayList<Matcher<? super Iterable<T>>>(itemMatchers.length);
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\textui\TestRunner.java
Starting at line 19 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\BaseTestRunnerTest.java

    }

    @Override
    public void testFailed(int status, Test test, Throwable e) {
    }

    @Override
    public void testStarted(String testName) {
    }
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 930 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java
Starting at line 7 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\MatcherAssert.java

    public static <T> void assertThat(T actual, Matcher<? super T> matcher) {
        assertThat("", actual, matcher);
    }
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\rules\TestWatcher.java
Starting at line 118 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 281 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 282 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 637 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 28 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\parent\TestWithClassRule.java

    public Statement apply(final Statement base, final Description description) {
        return new Statement() {
            @Override
            public void evaluate() throws Throwable {
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\rules\Verifier.java
Starting at line 221 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 309 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 386 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 673 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

public abstract class Verifier implements TestRule {
    public Statement apply(final Statement base, Description description) {
        return new Statement() {
            @Override
            public void evaluate() throws Throwable {
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 66 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testMixedSimpleAdd() {
        // [12 CHF] + [7 USD] == {[12 CHF][7 USD]}
        IMoney expected = MoneyBag.create(f12CHF, f7USD);
        assertEquals(expected, f12CHF.add(f7USD));
    }
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 161 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 200 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testSimpleSubtract() {
        // [14 CHF] - [12 CHF] == [2 CHF]
        Money expected = new Money(2, "CHF");
        assertEquals(expected, f14CHF.subtract(f12CHF));
    }
}
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\SuiteTest.java
Starting at line 67 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\SuiteTest.java

        Test t = new TestSuite(NoTestCases.class);
        t.run(fResult);
        assertTrue(fResult.runCount() == 1);  // warning test
        assertTrue(fResult.failureCount() == 1);
        assertTrue(!fResult.wasSuccessful());
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java
Starting at line 186 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java

        t.run(result);
        assertTrue(result.runCount() == 1);
        assertTrue(result.failureCount() == 0);
        assertTrue(result.errorCount() == 0);
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 75 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 111 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java

        public void testSomething() {
            Assert.assertTrue(true);
        }
    }

    @RunWith(Categories.class)
    @IncludeCategory(Token.class)
    @SuiteClasses({ TestThatAvoidsNoTestRemainsException.class,
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 251 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 288 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 311 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        @Category(FastTests.class)
        @Test
        public void a() {

        }
    }

    @RunWith(Categories.class)
    @IncludeCategory(SlowTests.class)
    @SuiteClasses({OneFast.class})
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 118 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

    public static class Q implements A, C {}

    @RunWith(Categories.class)
    @Categories.IncludeCategory({A.class, B.class})
    @Categories.ExcludeCategory(C.class)
=====================================================================
Found a 10 line (29 tokens) duplication in the following files: 
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 387 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

                FrameworkMethod method, Object target) {
            return new Statement() {
                @Override
                public void evaluate() throws Throwable {
                    runCount++;
                    base.evaluate();
                }
            };
        }
    }
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 18 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java
Starting at line 98 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java

    public static class ViolatedAssumptionTest {
        private static StringBuilder watchedLog = new StringBuilder();

        @Rule
        public TestRule watcher = new LoggingTestWatcher(watchedLog);

        @Test
        public void succeeds() {
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 118 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java
Starting at line 164 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java

    public static class TestWatcherFailedThrowsExceptionTest {
        @Rule
        public TestRule watcher = new TestWatcher() {
            @Override
            protected void failed(Throwable e, Description description) {
                throw new RuntimeException("watcher failure");
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterOptionIntegrationTest.java

        assertWasRun(DummyTestClass1.class);
        assertWasRun(DummyTestClass01.class);
        assertWasRun(DummyTestClass0TestMethod1.class);
        assertThat("runCount does not match", result.getRunCount(), is(5));
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 51 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java

    public void shouldParseFilterArgWithEqualsSyntax() throws Exception {
        String value= IncludeCategories.class.getName() + "=" + DummyCategory0.class.getName();
        jUnitCommandLineParseResult.parseOptions("--filter=" + value);
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java
Starting at line 64 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java

        assertThat(description.getClassName(), equalTo("org.junit.runner.Description"));
        assertThat(description.getMethodName(), equalTo("aTestMethod"));
        assertThat(description.getAnnotations().size(), equalTo(1));
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelClassTest.java
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelClassTest.java

    public static class Example1 {
        @Test
        public void one() throws InterruptedException {
            fSynchronizer.countDown();
            assertTrue(fSynchronizer.await(TIMEOUT, TimeUnit.SECONDS));
=====================================================================
Found a 11 line (29 tokens) duplication in the following files: 
Starting at line 22 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java

        public static int failingDataPoint() {
            throw new RuntimeException();
        }

        @Theory
        public void theory(int x) {
        }
    }

    @Test
    public void shouldFailFromExceptionsInSingleDataPointMethods() {
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 45 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithExtendedParameterSources.java
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\WithExtendedParameterSources.java

        @Theory(nullsAccepted = false)
        public void allStringsAreNonNull(String s) {
            assertThat(s, notNullValue());
        }
    }

    @Test
    public void shouldFilterOutNullSingleDataPoints() {
=====================================================================
Found a 13 line (29 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\InitializationErrorForwardCompatibilityTest.java
Starting at line 180 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SortableTest.java

        }

        @Override
        public Description getDescription() {
            return Description.EMPTY;
        }

        @Override
        public void run(RunNotifier notifier) {
        }
    }

    @RunWith(CantInitialize.class)
=====================================================================
Found a 12 line (29 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SingleMethodTest.java
Starting at line 292 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        public static void once() {
            count++;
        }

        @Test
        public void one() {
        }

        @Test
        public void two() {
        }
    }
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 121 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 252 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 573 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        @Parameters
        public static Collection<Object[]> data() {
            return Arrays.asList(new Object[][]{{3}, {3}});
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 173 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 205 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

    static public class BadIndexForAnnotatedFieldTest {
        @Parameters
        public static Collection<Object[]> data() {
            return Arrays.asList(new Object[][]{{0}});
=====================================================================
Found a 8 line (29 tokens) duplication in the following files: 
Starting at line 548 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 566 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

    static public abstract class SuperStaticMethodShadowing {

        @ClassRule
        public static TestRule rule() {
            return new ExternalResource() {
                @Override
                protected void before() throws Throwable {
                    log += "super.rule().before() ";
=====================================================================
Found a 10 line (28 tokens) duplication in the following files: 
Starting at line 208 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\categories\Categories.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\manipulation\Filter.java

            }

            for (Description each : description.getChildren()) {
                if (shouldRun(each)) {
                    return true;
                }
            }

            return false;
        }
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\matchers\TypeSafeMatcher.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\TypeSafeDiagnosingMatcher.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\TypeSafeMatcher.java

    @SuppressWarnings({"unchecked"})
    public final boolean matches(Object item) {
        return item != null
                && expectedType.isInstance(item)
                && matchesSafely((T) item);
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 166 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 191 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 203 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 219 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 231 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 244 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 256 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java
Starting at line 269 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\internal\runners\rules\RuleMemberValidator.java

    private static final class MemberMustBeNonStaticOrAlsoClassRule implements RuleValidator {
        public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\rules\Verifier.java
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 222 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 34 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 310 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 387 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 674 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

    public Statement apply(final Statement base, Description description) {
        return new Statement() {
            @Override
            public void evaluate() throws Throwable {
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 145 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testNormalize2() {
        // {[12 CHF][7 USD]} - [12 CHF] == [7 USD]
        Money expected = new Money(7, "USD");
        assertEquals(expected, fMB1.subtract(f12CHF));
    }
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 137 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testSimpleAdd() {
        // [12 CHF] + [14 CHF] == [26 CHF]
        Money expected = new Money(26, "CHF");
        assertEquals(expected, f12CHF.add(f14CHF));
    }
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 186 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testSimpleMultiply() {
        // [14 CHF] *2 == [28 CHF]
        Money expected = new Money(28, "CHF");
        assertEquals(expected, f14CHF.multiply(2));
    }
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyTest.java
Starting at line 193 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\samples\money\MoneyTest.java

    public void testSimpleNegate() {
        // [14 CHF] negate == [-14 CHF]
        Money expected = new Money(-14, "CHF");
        assertEquals(expected, f14CHF.negate());
    }
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java
Starting at line 51 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\ActiveTestTest.java

        assertEquals(500, result.runCount());
        assertEquals(0, result.failureCount());
        assertEquals(0, result.errorCount());
    }
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java
Starting at line 71 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\AssumptionViolatedExceptionTest.java

    public void canSetCauseWithInstanceCreatedWithObjectAndMatcher() {
      Throwable testObject = new Exception();
      org.junit.internal.AssumptionViolatedException e
              = new org.junit.internal.AssumptionViolatedException(
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 211 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 220 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        CategoryFilter filter = CategoryFilter.include(SlowTests.class);
        BlockJUnit4ClassRunner runner = new BlockJUnit4ClassRunner(A.class);
        filter.apply(runner);
        assertEquals(1, runner.testCount());
    }
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 344 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 372 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

    public static class AllIncludedMustMatched {
        @Test
        @Category({MultiA.class, MultiB.class})
        public void a() {
        }

        @Test
        @Category(MultiB.class)
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java
Starting at line 118 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\MultiCategoryTest.java

    }

    @RunWith(Categories.class)
    @Categories.IncludeCategory({A.class, B.class})
    @Categories.ExcludeCategory(C.class)
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 183 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java

        assertEquals("One test should fail", 1, result.getFailureCount());
        Failure failure = result.getFailures().get(0);

        assertHasTrimmedTrace(failure,
                message("java.lang.RuntimeException: outer"),
=====================================================================
Found a 11 line (28 tokens) duplication in the following files: 
Starting at line 222 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ClassRulesTest.java
Starting at line 384 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java

            public Statement apply(final Statement base, Description description) {
                return new Statement() {
                    @Override
                    public void evaluate() throws Throwable {
                        base.evaluate();
                    }
                };
            }
        }

        @ClassRule
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\DisableOnDebugTest.java
Starting at line 143 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\DisableOnDebugTest.java
Starting at line 151 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\DisableOnDebugTest.java
Starting at line 301 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 330 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        Result result = core.run(PreJava5DebugArgumentsTest.class);
        assertEquals("Should run the test", 1, result.getRunCount());
        assertEquals("Test should not have failed", 0, result.getFailureCount());
    }
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 21 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\EventCollector.java
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\EventCollector.java

    static Matcher<EventCollector> hasNumberOfFailures(
            final int numberOfFailures) {
        return new TypeSafeMatcher<EventCollector>() {
            @Override
            public boolean matchesSafely(EventCollector item) {
                return item.fFailures.size() == numberOfFailures;
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 121 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java
Starting at line 144 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java

    public static class ThrowExceptionWithExpectedType {
        @Rule
        public ExpectedException thrown = none();

        @Test
        public void throwsNullPointerException() {
            thrown.expect(NullPointerException.class);
            throw new NullPointerException();
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 186 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java
Starting at line 198 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java

    public static class ExpectsSubstring {
        @Rule
        public ExpectedException thrown = none();

        @Test
        public void throwsMore() {
            thrown.expectMessage("anything!");
            throw new NullPointerException(
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 332 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java
Starting at line 343 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java
Starting at line 356 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java

    public static class UseNoCustomMessage {

        @Rule
        public ExpectedException thrown= ExpectedException.none();

        @Test
        public void noThrow() {
            thrown.expect(IllegalArgumentException.class);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\JUnit38SortingTest.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java

        Request request = Request.classes(JUnit4Test.class, JUnit38Test.class);
        fMax.run(request);
        List<Description> tests = fMax.sortedLeavesForTest(request);
        Description dontSucceed = Description.createTestDescription(
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 27 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelClassTest.java
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelClassTest.java
Starting at line 32 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\parallel\ParallelMethodTest.java

        @Test
        public void one() throws InterruptedException {
            fSynchronizer.countDown();
            assertTrue(fSynchronizer.await(TIMEOUT, TimeUnit.SECONDS));
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 84 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 95 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\SpecificDataPointsSupplierTest.java

        List<PotentialAssignment> assignments = supplier.getValueSources(signature("methodWantingNamedFieldString"));
        List<String> assignedStrings = getStringValuesFromAssignments(assignments);

        assertEquals(1, assignedStrings.size());
        assertThat(assignedStrings, hasItem("named field"));
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\SuccessfulWithDataPointFields.java
Starting at line 97 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\SuccessfulWithDataPointFields.java

        public PositiveInts(int x) {
            assumeTrue(x > 0);
            this.x = x;
        }

        @Theory
        public void haveAPostiveSquare() {
            assertTrue(x * x > 0);
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 120 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 173 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 205 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

    public static class ParameterizedWithoutSpecialTestname {
        @Parameters
        public static Collection<Object[]> data() {
            return Arrays.asList(new Object[][]{{3}, {3}});
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java
Starting at line 71 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java

        Result result = core.run(All.class);
        assertEquals(2, result.getRunCount());
        assertEquals(1, result.getFailureCount());
    }

    @Test
    public void ensureInheritedTestIsRun() {
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 12 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(java.lang.Iterable<org.hamcrest.Matcher<? super T>> matchers) {
    return org.hamcrest.core.AllOf.<T>allOf(matchers);
=====================================================================
Found a 11 line (28 tokens) duplication in the following files: 
Starting at line 50 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 64 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 79 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 95 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        return anyOf(Arrays.asList(matchers));
    }

    /**
     * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
     * <p/>
     * For example:
     * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
     */
    @Factory
    public static <T> AnyOf<T> anyOf(Matcher<T> first, Matcher<? super T> second) {
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\categories\ExcludeCategories.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\categories\IncludeCategories.java

        public ExcludesAny(List<Class<?>> categories) {
            this(new HashSet<Class<?>>(categories));
        }

        public ExcludesAny(Set<Class<?>> categories) {
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\results\ResultMatchers.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\results\ResultMatchers.java

    public static Matcher<PrintableResult> hasSingleFailureMatching(final Matcher<Throwable> matcher) {
        return new TypeSafeMatcher<PrintableResult>() {
            @Override
            public boolean matchesSafely(PrintableResult item) {
                return item.failureCount() == 1 && matcher.matches(item.failures().get(0).getException());
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 21 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\manipulation\Filter.java
Starting at line 213 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\MaxStarterTest.java

    public static final Filter ALL = new Filter() {
        @Override
        public boolean shouldRun(Description description) {
            return true;
        }

        @Override
        public String describe() {
            return "all tests";
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 244 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java
Starting at line 278 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java

    public <T> void collectAnnotatedFieldValues(Object test,
            Class<? extends Annotation> annotationClass, Class<T> valueClass,
            MemberValueConsumer<T> consumer) {
        for (FrameworkField each : getAnnotatedFields(annotationClass)) {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 312 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\model\TestClass.java
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\parameterized\TestWithParameters.java
Starting at line 41 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\SynchronizedRunListenerTest.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\SynchronizedRunListenerTest.java

        return (clazz == null) ? 0 : clazz.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
=====================================================================
Found a 13 line (27 tokens) duplication in the following files: 
Starting at line 23 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\validator\AnnotationsValidator.java
Starting at line 49 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\validator\AnnotationsValidator.java

            new ClassValidator(), new MethodValidator(), new FieldValidator());

    /**
     * Validate all annotations of the specified test class that are be
     * annotated with {@link ValidateWith}.
     * 
     * @param testClass
     *            the {@link TestClass} that is validated.
     * @return the errors found by the validator.
     */
    public List<Exception> validateTestClass(TestClass testClass) {
        List<Exception> validationErrors= new ArrayList<Exception>();
        for (AnnotatableValidator<?> validator : VALIDATORS) {
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\Money.java
Starting at line 135 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\samples\money\MoneyBag.java

    }

    public IMoney subtract(IMoney m) {
        return add(m.negate());
    }

    @Override
    public String toString() {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\DoublePrecisionAssertTest.java
Starting at line 13 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\FloatAssertTest.java

            assertEquals(1.234, Double.NaN, 0.0);
            fail();
        } catch (AssertionFailedError e) {
        }
    }

    public void testAssertNaNEqualsFails() {
        try {
            assertEquals(Double.NaN, 1.234, 0.0);
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\DoublePrecisionAssertTest.java
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\FloatAssertTest.java

            assertEquals(Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, 0.0);
            fail();
        } catch (AssertionFailedError e) {
        }
    }

    public void testAssertPosInfinityNotEquals() {
        try {
            assertEquals(Double.POSITIVE_INFINITY, 1.23, 0.0);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\SuiteTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\SuiteTest.java

        Test t = new TestSuite(NoTestCases.class);
        t.run(fResult);
        assertTrue(fResult.runCount() == 1);  // warning test
        assertTrue(fResult.failureCount() == 1);
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 360 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

                .run(SuiteWithParameterizedTestWithoutCategory.class);
        assertEquals(1, result.getRunCount());
        assertEquals(0, result.getFailureCount());
    }

    @RunWith(Parameterized.class)
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 252 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 289 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 312 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 418 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        @Test
        public void a() {

        }
    }

    @RunWith(Categories.class)
    @IncludeCategory(SlowTests.class)
    @SuiteClasses({OneFast.class})
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 388 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        Result result= JUnitCore.runClasses(MultiIncludeWithExcludeCategorySuite.class);
        assertEquals(1, result.getRunCount());
        assertEquals(0, result.getFailureCount());
    }

    public static class ClassAsCategory {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 35 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 44 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java

        assertThat(runner, is(instanceOf(RunnerSpy.class)));

        RunnerSpy runnerSpy = (RunnerSpy) runner;
        assertThat(runnerSpy.getInvokedTestClass(), is((Object) OuterClass.class));
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 101 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 104 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ExpectedExceptionTest.java
Starting at line 27 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\RequestTest.java

    public void runTestClassAndVerifyEvents() {
        EventCollector collector = new EventCollector();
        JUnitCore core = new JUnitCore();
        core.addListener(collector);
        core.run(classUnderTest);
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 150 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 160 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 180 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class CheckMatcherThatDoesNotFailWithoutProvidedReason {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.checkThat(3, is(3));
=====================================================================
Found a 11 line (27 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 119 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        public MethodRule incrementor2 = new Increment();

        @Test
        public void nothing() {

        }
    }

    @Test
    public void multipleRulesAreRun() {
        runCount = 0;
=====================================================================
Found a 14 line (27 tokens) duplication in the following files: 
Starting at line 174 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\MethodRulesTest.java
Starting at line 189 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 515 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java

        };

        @Test
        public void fails() {
            fail();
        }

        @Test
        public void succeeds() {
        }
    }

    @Test
    public void succeeded() {
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCommandLineParseResultTest.java

        jUnitCommandLineParseResult.parseOptions("--filter=" + value);

        List<String> specs= jUnitCommandLineParseResult.getFilterSpecs();

        assertThat(specs, hasItems(value));
    }

    @Test
    public void shouldCreateFailureUponBaldFilterOptionNotFollowedByValue() {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 15 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\JUnitCoreTest.java
Starting at line 154 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java

        Result result = jUnitCore.runMain(new TestSystem(), "NonExistentTest");

        assertThat(result.getFailureCount(), is(1));
        assertThat(result.getFailures().get(0).getException(), instanceOf(IllegalArgumentException.class));
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 49 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java

    public void addAndRemoveWithNonThreadSafeListener() {
        CountingListener listener = new CountingListener();
        assertThat(listener.fTestStarted.get(), is(0));
        fNotifier.addListener(listener);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java
Starting at line 85 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\RunNotifierTest.java

    public void addAndRemoveWithThreadSafeListener() {
        ThreadSafeListener listener = new ThreadSafeListener();
        assertThat(listener.fTestStarted.get(), is(0));
        fNotifier.addListener(listener);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\SynchronizedRunListenerTest.java
Starting at line 135 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\notification\SynchronizedRunListenerTest.java

    public void namedListenerCorrectlyImplementsEqualsAndHashCode() {
        NamedListener listener1 = new NamedListener("blue");
        NamedListener listener2 = new NamedListener("blue");
        NamedListener listener3 = new NamedListener("red");
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 230 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 230 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

        assertArrayEquals((new Object[]{new Object[]{true, true}, new Object[]{false, false}}), (new Object[]{new Object[]{true, true}, new Object[]{false, false}}));
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 308 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 313 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

                "not equal: array lengths differed, expected.length=1 actual.length=0; arrays first differed at element [1][0]; expected:<true> but was:<end of array>");
        assertArrayEqualsFailure(
                "not equal",
                new Object[][]{{}, {}},
                new Object[][]{{true}, {}},
=====================================================================
Found a 8 line (27 tokens) duplication in the following files: 
Starting at line 442 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 647 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 739 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 763 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

            assertEquals("message expected:<" + o.toString() + "> but was:<null>", e.getMessage());
            return;
        }
        throw new AssertionError(ASSERTION_ERROR_EXPECTED);
    }

    @Test(expected = AssertionError.class)
    public void objectsNotEquals() {
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 38 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\MultipleFailureExceptionTest.java
Starting at line 50 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\MultipleFailureExceptionTest.java

        Throwable exception= new ExpectedException("pesto");
        List<Throwable> errors= Collections.singletonList(exception);
        try {
            MultipleFailureException.assertEmpty(errors);
            fail();
        } catch (ExpectedException e) {
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\MultipleFailureExceptionTest.java
Starting at line 99 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\MultipleFailureExceptionTest.java

            assertThat(expected.getFailures(), equalTo(errors));
            assertTrue(expected.getMessage().startsWith("There were 2 errors:" + LINE_SEPARATOR));
            assertTrue(expected.getMessage().contains("ExpectedException(basil)" + LINE_SEPARATOR));
=====================================================================
Found a 12 line (27 tokens) duplication in the following files: 
Starting at line 168 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\AssumptionTest.java
Starting at line 185 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\AssumptionTest.java

        public void checkForSomethingThatIsntThere() {
            assumeTrue(false);
        }

        @Test
        public void failing() {
            fail();
        }
    }

    @Test
    public void failingAssumptionInBeforePreventsTestRun() {
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\listening\RunnerTest.java
Starting at line 47 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\listening\RunnerTest.java

    public void newTestCount() {
        JUnitCore runner = new JUnitCore();
        MyListener listener = new MyListener();
        runner.addListener(listener);
        runner.run(Example.class);
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 174 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 206 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 252 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 573 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        @Parameters
        public static Collection<Object[]> data() {
            return Arrays.asList(new Object[][]{{0}});
=====================================================================
Found a 10 line (27 tokens) duplication in the following files: 
Starting at line 237 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 492 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

    static public class BeforeAndAfter {
        @BeforeClass
        public static void before() {
            fLog += "before ";
        }

        @AfterClass
        public static void after() {
            fLog += "after ";
        }
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 296 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 350 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 434 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        }

        @Parameters
        public static Collection<String> data() {
            return Arrays.asList("A", "B");
        }

        @Test
        public void first() {
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java
Starting at line 198 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java
Starting at line 233 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerTest.java

        CountingRunListener countingRunListener = runTestWithParentRunner(AssertionErrorAtParentLevelTest.class);
        Assert.assertEquals(1, countingRunListener.testSuiteStarted);
        Assert.assertEquals(1, countingRunListener.testSuiteFinished);
        Assert.assertEquals(1, countingRunListener.testSuiteFailure);
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\BaseDescription.java
Starting at line 76 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\Description.java

    }
    
    @Override
    public <T> Description appendValueList(String start, String separator, String end, Iterable<T> values) {
        return appendValueList(start, separator, end, values.iterator());
=====================================================================
Found a 10 line (27 tokens) duplication in the following files: 
Starting at line 13 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 33 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 43 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 63 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AllOf.<T>allOf(matchers);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ALL</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", allOf(startsWith("my"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T>... matchers) {
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third) {
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 92 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth) {
=====================================================================
Found a 10 line (27 tokens) duplication in the following files: 
Starting at line 28 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CustomMatcher.java
Starting at line 30 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CustomTypeSafeMatcher.java

            throw new IllegalArgumentException("Description should be non null!");
        }
        this.fixedDescription = description;
    }

    @Override
    public final void describeTo(Description description) {
        description.appendText(fixedDescription);
    }
}
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 99 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth) {
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 115 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 132 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

    public static <T> Matcher<T> allOf(Matcher<? super T> first, Matcher<? super T> second, Matcher<? super T> third, Matcher<? super T> fourth, Matcher<? super T> fifth) {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 751 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java
Starting at line 823 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java

    private static void failNotNull(String message, Object actual) {
        String formatted = "";
        if (message != null) {
            formatted = message + " ";
        }
        fail(formatted + "expected null, but was:<" + actual + ">");
=====================================================================
Found a 12 line (26 tokens) duplication in the following files: 
Starting at line 66 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java
Starting at line 105 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\TestCaseTest.java

            protected void setUp() {
                throw new Error();
            }

            @Override
            protected void runTest() {
            }
        };
        verifyError(fails);
    }

    public void testSuccess() {
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 27 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextRunnerTest.java
Starting at line 22 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\core\SystemExitTest.java

    void execTest(String testClass, boolean success) throws Exception {
        String java = System.getProperty("java.home") + File.separator + "bin" + File.separator + "java";
        String cp = System.getProperty("java.class.path");
=====================================================================
Found a 11 line (26 tokens) duplication in the following files: 
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryFilterFactoryTest.java
Starting at line 124 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SingleMethodTest.java

    private static class DummyFilter extends Filter {
        @Override
        public boolean shouldRun(Description description) {
            return false;
        }

        @Override
        public String describe() {
            return null;
        }
    }
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 69 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 27 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\JavadocTest.java

        public void a() {
            fail();
        }

        @Category(SlowTests.class)
        @Test
        public void b() {
        }
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 340 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\StackTracesTest.java
Starting at line 10 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\SampleJUnit4Tests.java

    public static class TestWithOneThrowingTestMethod {
        
        @Test
        public void alwaysThrows() {
            new FakeClassUnderTest().throwsExceptionWithoutCause();
        }
    }

    public static class JUnit3TestWithOneThrowingTestMethod extends TestCase {
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 109 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java
Starting at line 119 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\ErrorCollectorTest.java

    public static class AddSingleError {
        @Rule
        public ErrorCollector collector = new ErrorCollector();

        @Test
        public void example() {
            collector.addError(new Throwable("message"));
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 10 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\LoggingMethodRule.java
Starting at line 10 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\LoggingTestRule.java

    LoggingMethodRule(StringBuilder log, String name) {
        this.name = name;
        this.log = log;
    }

    public Statement apply(Statement base, FrameworkMethod method, Object target) {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 126 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java
Starting at line 136 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java

    public static class DurationDuringTestTest extends AbstractStopwatchTest {
        @Test
        public void duration() {
            simulateTimePassing(300L);
            assertEquals(300L, stopwatch.runtime(MILLISECONDS));
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 128 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java
Starting at line 151 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TempFolderRuleTest.java

        assertThat(testResult(CreatesRandomSubFolders.class), isSuccessful());
        for (File f : createdFiles) {
            assertFalse(f.exists());
        }
    }
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 69 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\parameterized\TestWithParametersTest.java
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runners\parameterized\TestWithParametersTest.java

        TestWithParameters firstTest = new TestWithParameters(DUMMY_NAME,
                new TestClass(DummyClass.class), Arrays.<Object> asList("a",
                        "b"));
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 334 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 698 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 711 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java
Starting at line 727 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\AssertionTest.java

        } catch (ArrayComparisonFailure e) {
            assertEquals(expectedMessage, e.getMessage());
            return;
        }
        throw new AssertionError(ASSERTION_ERROR_EXPECTED);
    }

    @Test
    public void multiDimensionalArraysDifferentLengthMessage() {
=====================================================================
Found a 12 line (26 tokens) duplication in the following files: 
Starting at line 23 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\deprecated\JUnit4ClassRunnerTest.java
Starting at line 47 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\deprecated\JUnit4ClassRunnerTest.java

        @Test
        public void success() {
        }

        @Test
        public void failure() {
            fail();
        }
    }

    @Test
    public void runWithOldJUnit4ClassRunner() {
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\deprecated\JUnit4ClassRunnerTest.java
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\deprecated\JUnit4ClassRunnerTest.java

        Result result = JUnitCore.runClasses(Example.class);
        assertThat(result.getRunCount(), is(2));
        assertThat(result.getFailureCount(), is(1));
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\AssumptionTest.java
Starting at line 283 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\AssumptionTest.java

        JUnitCore core = new JUnitCore();
        core.addListener(new RunListener() {
            @Override
            public void testAssumptionFailure(Failure failure) {
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\max\DescriptionTest.java
Starting at line 88 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\parent\ParentRunnerClassLoaderTest.java

                super(urls);
            }

            @Override // just making public
            public Class<?> findClass(String name) throws ClassNotFoundException {
                return super.findClass(name);
            }
        }
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\AllMembersSupplierTest.java
Starting at line 169 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\AllMembersSupplierTest.java
Starting at line 188 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\internal\AllMembersSupplierTest.java

                HasDataPointsArrayField.class.getMethod("theory", String.class));
        
        assertEquals(2, assignments.size());
    }
    
    public static class HasDataPointsArrayWithMatchingButInaccurateTypes {
=====================================================================
Found a 11 line (26 tokens) duplication in the following files: 
Starting at line 22 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java

        public static int failingDataPoint() {
            throw new RuntimeException();
        }

        @Theory
        public void theory(int x) {
        }
    }

    @Test
    public void shouldFailFromExceptionsInSingleDataPointMethods() {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 433 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 466 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        public BeforeParamAndAfterParamError(String x) {
        }

        @Parameters
        public static Collection<String> data() {
            return Arrays.asList("A", "B");
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 464 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 493 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        @Rule
        public TestRule rule() {
            return new ExternalResource() {
                @Override
                protected void before() throws Throwable {
                    log += "super.rule().before() ";
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 599 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 615 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

    static public abstract class SuperFieldShadowing {

        @Rule
        public final TestRule rule = new ExternalResource() {
            @Override
            protected void before() throws Throwable {
                log += "super.rule.before() ";
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 646 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 662 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

    static public abstract class SuperStaticFieldShadowing {

        @ClassRule
        public static TestRule rule = new ExternalResource() {
            @Override
            protected void before() throws Throwable {
                log += "super.rule.before() ";
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 58 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 89 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        assertEquals(AssertionError.class, result.getFailures().get(0).getException().getClass());
    }

    public static class FailureWithTimeoutRunTimeExceptionTest {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\BaseDescription.java
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\Description.java

    }
    
    @Override
    public Description appendList(String start, String separator, String end, Iterable<? extends SelfDescribing> values) {
        return appendList(start, separator, end, values.iterator());
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 152 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 162 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <LHS> org.hamcrest.core.CombinableMatcher.CombinableBothMatcher<LHS> both(org.hamcrest.Matcher<? super LHS> matcher) {
    return org.hamcrest.core.CombinableMatcher.<LHS>both(matcher);
=====================================================================
Found a 16 line (26 tokens) duplication in the following files: 
Starting at line 265 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 281 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.IsAnything.anything(description);
  }

  /**
   * Creates a matcher for {@link Iterable}s that only matches when a single pass over the
   * examined {@link Iterable} yields at least one item that is equal to the specified
   * <code>item</code>.  Whilst matching, the traversal of the examined {@link Iterable}
   * will stop as soon as a matching item is found.
   * <p/>
   * For example:
   * <pre>assertThat(Arrays.asList("foo", "bar"), hasItem("bar"))</pre>
   * 
   * @param item
   *     the item to compare against the items provided by the examined {@link Iterable}
   */
  public static <T> org.hamcrest.Matcher<java.lang.Iterable<? super T>> hasItem(T item) {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 100 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(4);
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
        return allOf(matchers);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 75 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 37 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\CombinableMatcher.java

        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>();
        matchers.add(first);
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 328 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\junit\framework\Assert.java
Starting at line 833 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java

    static public void failNotEquals(String message, Object expected, Object actual) {
        fail(format(message, expected, actual));
    }
=====================================================================
Found a 15 line (25 tokens) duplication in the following files: 
Starting at line 470 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java
Starting at line 501 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assert.java

            double[] actuals, double delta) throws ArrayComparisonFailure {
        new InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);
    }

    /**
     * Asserts that two double arrays are equal. If they are not, an
     * {@link AssertionError} is thrown.
     *
     * @param expecteds double array with expected values.
     * @param actuals double array with actual values
     * @param delta the maximum delta between <code>expecteds[i]</code> and
     * <code>actuals[i]</code> for which both numbers are still
     * considered equal.
     */
    public static void assertArrayEquals(double[] expecteds, double[] actuals, double delta) {
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assume.java
Starting at line 131 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\Assume.java

    public static <T> void assumeThat(T actual, Matcher<T> matcher) {
        if (!matcher.matches(actual)) {
            throw new AssumptionViolatedException(actual, matcher);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\DataPoint.java
Starting at line 60 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\experimental\theories\DataPoints.java

public @interface DataPoint {
    String[] value() default {};
    Class<? extends Throwable>[] ignoredExceptions() default {};
}
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\notification\RunNotifier.java
Starting at line 117 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\notification\RunNotifier.java
Starting at line 134 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\notification\RunNotifier.java
Starting at line 205 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\notification\RunNotifier.java
Starting at line 221 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runner\notification\RunNotifier.java

    public void fireTestRunStarted(final Description description) {
        new SafeNotifier() {
            @Override
            protected void notifyListener(RunListener each) throws Exception {
                each.testRunStarted(description);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 306 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\Parameterized.java
Starting at line 171 of C:\Users\TTA\eclipse-workspace\junit\src\main\java\org\junit\runners\ParentRunner.java

            Class<? extends Annotation> annotation, Integer parameterCount,
            List<Throwable> errors) {
        List<FrameworkMethod> methods = getTestClass().getAnnotatedMethods(annotation);
        for (FrameworkMethod fm : methods) {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 31 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\extensions\RepeatedTestTest.java
Starting at line 97 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java

        assertEquals(2, test.countTestCases());
        TestResult result = new TestResult();
        test.run(result);
        assertEquals(2, result.runCount());
    }
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\SuiteTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\framework\SuiteTest.java

        Test t = new SuiteTest("notExistingMethod");
        t.run(fResult);
        assertTrue(fResult.runCount() == 1);
        assertTrue(fResult.failureCount() == 1);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 49 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 61 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java
Starting at line 85 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\junit\tests\runner\TextFeedbackTest.java

        String expected = expected(new String[]{".", "Time: 0", "", "OK (1 test)", ""});
        TestSuite suite = new TestSuite();
        suite.addTest(new TestCase() {
            @Override
            public void runTest() {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 360 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 85 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java

                .run(SuiteWithParameterizedTestWithoutCategory.class);
        assertEquals(1, result.getRunCount());
        assertEquals(0, result.getFailureCount());
    }

    @RunWith(Parameterized.class)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoriesAndParameterizedTest.java
Starting at line 168 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        assertEquals(1, result.getRunCount());
        assertEquals(0, result.getFailureCount());
    }

    @RunWith(Parameterized.class)
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 56 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryFilterFactoryTest.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\runner\FilterFactoriesTest.java
Starting at line 125 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SingleMethodTest.java

        @Override
        public boolean shouldRun(Description description) {
            return false;
        }

        @Override
        public String describe() {
            return null;
        }
    }
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 171 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java
Starting at line 430 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryTest.java

        Result result = JUnitCore.runClasses(IncludeAndExcludeSuite.class);
        assertEquals(1, result.getRunCount());
        assertTrue(result.wasSuccessful());
    }

    @RunWith(Suite.class)
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryValidatorTest.java
Starting at line 84 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\experimental\categories\CategoryValidatorTest.java

        List<Exception> errors = new CategoryValidator().validateAnnotatedMethod(method);

        assertThat(errors.size(), is(1));
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 25 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\ChecksTest.java
Starting at line 54 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\ChecksTest.java

            notNull(null);
            fail("NullPointerException expected");
        } catch (NullPointerException e) {
            assertNull("message should be null", e.getMessage());
        }
    }
=====================================================================
Found a 11 line (25 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java
Starting at line 83 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\internal\builders\AnnotatedBuilderTest.java

        public class InnerClassWithoutOwnRunWith {
            @Test
            public void test() {
            }

            public class MostInnerClass {
                @Test
                public void test() {
                }
            }
        }
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java
Starting at line 183 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java
Starting at line 194 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\StopwatchTest.java

        assertThat(record.name, is("successfulTest"));
        assertThat(record.name, is(finishedRecord.name));
        assertThat(record.status, is(TestStatus.SUCCEEDED));
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 151 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestRuleTest.java
Starting at line 118 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java
Starting at line 164 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\rules\TestWatcherTest.java

    public static class OnFailureTest {
        @Rule
        public TestRule watcher = new TestWatcher() {
            @Override
            protected void failed(Throwable e, Description description) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\assertion\ComparisonFailureTest.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 175 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 207 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 253 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 574 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

	public static Collection<Object[]> data() {
		return Arrays.asList(new Object[][] {
			// simple base case
			{ "a", "b", "expected:<[a]> but was:<[b]>" },
=====================================================================
Found a 11 line (25 tokens) duplication in the following files: 
Starting at line 22 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 42 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 82 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 102 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\experimental\theories\runner\FailingDataPointMethods.java

        public static int failingDataPoint() {
            throw new RuntimeException();
        }

        @Theory
        public void theory(int x) {
        }
    }

    @Test
    public void shouldFailFromExceptionsInSingleDataPointMethods() {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityTest.java
Starting at line 15 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\ExpectedTest.java

    public static class ExpectedTest {
        @Test(expected = Exception.class)
        public void expected() throws Exception {
            throw new Exception();
        }
    }
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 130 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\junit3compatibility\ForwardCompatibilityTest.java
Starting at line 29 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\ExpectedTest.java

    public static class UnExpectedExceptionTest {
        @Test(expected = Exception.class)
        public void expected() throws Exception {
            throw new Error();
        }
    }
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 77 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\manipulation\SortableTest.java
Starting at line 14 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\EnclosedTest.java

        @RunWith(Enclosed.class)
        public static class Enclosing {
            public static class A {
                @Test
                public void a() {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 27 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\IgnoreClassTest.java
Starting at line 251 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TestMethodTest.java

        Result result = JUnitCore.runClasses(IgnoreMe.class);
        assertEquals(0, result.getFailureCount());
        assertEquals(1, result.getIgnoreCount());
    }
}
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 145 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java
Starting at line 207 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParameterizedTestTest.java

        public static Iterable<Object[]> data() {
            return Arrays.asList(new Object[][] { { 0, 0, 0 }, { 1, 1, 2 },
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 146 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerFilteringTest.java
Starting at line 166 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\ParentRunnerFilteringTest.java

        assertEquals(0, result.getFailureCount());

        Description desc = createTestDescription(ExampleTest.class, "test1");
        assertEquals(1, countingFilter.getCount(desc));
    }
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java
Starting at line 13 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\UseSuiteAsASuperclassTest.java

public class SuiteTest {
    public static class TestA {
        @Test
        public void pass() {
        }
    }

    public static class TestB {
        @Test
        public void fail() {
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 172 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java
Starting at line 192 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\classes\SuiteTest.java

        Result result = JUnitCore.runClasses(BiInfiniteLoop.class);
        assertEquals(2, result.getFailureCount());
    }

    // The interesting case here is that Hydra indirectly contains two copies of
    // itself (if it only contains one, Java's StackOverflowError eventually
    // bails us out)

    @RunWith(Suite.class)
    @SuiteClasses({Hercules.class})
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 39 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 55 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java
Starting at line 86 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\TimeoutTest.java

        Result result = runner.run(FailureTest.class);
        assertEquals(1, result.getRunCount());
        assertEquals(1, result.getFailureCount());
        assertEquals(AssertionError.class, result.getFailures().get(0).getException().getClass());
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 751 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java
Starting at line 811 of C:\Users\TTA\eclipse-workspace\junit\src\test\java\org\junit\tests\running\methods\AnnotationTest.java

        core.run(RunAllAfters.class);
        assertTrue(log.contains("one"));
        assertTrue(log.contains("two"));
    }

    static public class RunAllAftersRegardless {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\BaseDescription.java
Starting at line 70 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\Description.java

    }

    @Override
    public <T> Description appendValueList(String start, String separator, String end, T... values) {
        return appendValueList(start, separator, end, Arrays.asList(values));
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 72 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.Matcher<T> allOf(org.hamcrest.Matcher<? super T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
    return org.hamcrest.core.AllOf.<T>allOf(first, second, third, fourth, fifth);
=====================================================================
Found a 10 line (25 tokens) duplication in the following files: 
Starting at line 83 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 93 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 103 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 113 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 133 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

    return org.hamcrest.core.AnyOf.<T>anyOf(matchers);
  }

  /**
   * Creates a matcher that matches if the examined object matches <b>ANY</b> of the specified matchers.
   * <p/>
   * For example:
   * <pre>assertThat("myValue", anyOf(startsWith("foo"), containsString("Val")))</pre>
   */
  public static <T> org.hamcrest.core.AnyOf<T> anyOf(org.hamcrest.Matcher<T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third) {
=====================================================================
Found a 2 line (25 tokens) duplication in the following files: 
Starting at line 112 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java
Starting at line 122 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\CoreMatchers.java

  public static <T> org.hamcrest.core.AnyOf<T> anyOf(org.hamcrest.Matcher<T> first, org.hamcrest.Matcher<? super T> second, org.hamcrest.Matcher<? super T> third, org.hamcrest.Matcher<? super T> fourth, org.hamcrest.Matcher<? super T> fifth) {
    return org.hamcrest.core.AnyOf.<T>anyOf(first, second, third, fourth, fifth);
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 100 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 116 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 133 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AllOf.java
Starting at line 90 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 106 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java
Starting at line 123 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\AnyOf.java

        List<Matcher<? super T>> matchers = new ArrayList<Matcher<? super T>>(4);
        matchers.add(first);
        matchers.add(second);
        matchers.add(third);
        matchers.add(fourth);
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 21 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\Is.java
Starting at line 19 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\IsNot.java

    public Is(Matcher<T> matcher) {
        this.matcher = matcher;
    }

    @Override
    public boolean matches(Object arg) {
        return matcher.matches(arg);
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 81 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\Is.java
Starting at line 96 of C:\Users\TTA\eclipse-workspace\junit\target\distro-javadoc-sources\hamcrest-core-1.3-sources\org\hamcrest\core\Is.java

    public static <T> Matcher<T> is(Class<T> type) {
        final Matcher<T> typeMatcher = instanceOf(type);
        return is(typeMatcher);
    }
